digraph "CallGraph" {
    node [style="rounded,bold,filled"];
    node [shape=box];
    "Root" [label="Root",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)" [label="MainActivity(onCreate)",];
    "Root"->"com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)" [label="SYMBOLIC",style=bold,color=black,];
    "android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)" [label="AppCompatActivity(onCreate)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegate: void onCreate(android.os.Bundle)" [label="AppCompatDelegate(onCreate)",];
    "android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatDelegate: void onCreate(android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegate: boolean applyDayNight()" [label="AppCompatDelegate(applyDayNight)",];
    "android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatDelegate: boolean applyDayNight()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegate: void installViewFactory()" [label="AppCompatDelegate(installViewFactory)",];
    "android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatDelegate: void installViewFactory()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)" [label="FragmentActivity(onCreate)",];
    "android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)"->"android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentController: void dispatchCreate()" [label="FragmentController(dispatchCreate)",];
    "android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)"->"android.support.v4.app.FragmentController: void dispatchCreate()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchCreate()" [label="FragmentManagerImpl(dispatchCreate)",];
    "android.support.v4.app.FragmentController: void dispatchCreate()"->"android.support.v4.app.FragmentManagerImpl: void dispatchCreate()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)" [label="FragmentManagerImpl(moveToState)",];
    "android.support.v4.app.FragmentManagerImpl: void dispatchCreate()"->"android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)" [label="FragmentManagerImpl(moveFragmentToExpectedState)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)" [label="FragmentManagerImpl(moveToState)",];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)"->"android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: android.content.Context getContext()" [label="FragmentHostCallback(getContext)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentHostCallback: android.content.Context getContext()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void restoreChildFragmentState(android.os.Bundle)" [label="Fragment(restoreChildFragmentState)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void restoreChildFragmentState(android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void instantiateChildFragmentManager()" [label="Fragment(instantiateChildFragmentManager)",];
    "android.support.v4.app.Fragment: void restoreChildFragmentState(android.os.Bundle)"->"android.support.v4.app.Fragment: void instantiateChildFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void <init>()" [label="FragmentManagerImpl(<init>)",];
    "android.support.v4.app.Fragment: void instantiateChildFragmentManager()"->"android.support.v4.app.FragmentManagerImpl: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManager: void <init>()" [label="FragmentManager(<init>)",];
    "android.support.v4.app.FragmentManagerImpl: void <init>()"->"android.support.v4.app.FragmentManager: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl$1: void <init>(android.support.v4.app.FragmentManagerImpl)" [label="FragmentManagerImpl$1(<init>)",];
    "android.support.v4.app.FragmentManagerImpl: void <init>()"->"android.support.v4.app.FragmentManagerImpl$1: void <init>(android.support.v4.app.FragmentManagerImpl)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment)" [label="FragmentManagerImpl(attachController)",];
    "android.support.v4.app.Fragment: void instantiateChildFragmentManager()"->"android.support.v4.app.FragmentManagerImpl: void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment$2: void <init>(android.support.v4.app.Fragment)" [label="Fragment$2(<init>)",];
    "android.support.v4.app.Fragment: void instantiateChildFragmentManager()"->"android.support.v4.app.Fragment$2: void <init>(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentContainer: void <init>()" [label="FragmentContainer(<init>)",];
    "android.support.v4.app.Fragment$2: void <init>(android.support.v4.app.Fragment)"->"android.support.v4.app.FragmentContainer: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)" [label="FragmentManagerImpl(restoreAllState)",];
    "android.support.v4.app.Fragment: void restoreChildFragmentState(android.os.Bundle)"->"android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void restoreChildFragmentState(android.os.Bundle)"->"android.support.v4.app.FragmentManagerImpl: void dispatchCreate()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentPaused(android.support.v4.app.Fragment,boolean)" [label="FragmentManagerImpl(dispatchOnFragmentPaused)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentPaused(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentPaused(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentPaused(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()" [label="Fragment(getFragmentManager)",];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentPaused(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPaused(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment)" [label="FragmentManager$FragmentLifecycleCallbacks(onFragmentPaused)",];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentPaused(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPaused(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performActivityCreated(android.os.Bundle)" [label="Fragment(performActivityCreated)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void performActivityCreated(android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)" [label="SuperNotCalledException(<init>)",];
    "android.support.v4.app.Fragment: void performActivityCreated(android.os.Bundle)"->"android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchActivityCreated()" [label="FragmentManagerImpl(dispatchActivityCreated)",];
    "android.support.v4.app.Fragment: void performActivityCreated(android.os.Bundle)"->"android.support.v4.app.FragmentManagerImpl: void dispatchActivityCreated()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchActivityCreated()"->"android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)" [label="Fragment(onActivityCreated)",];
    "android.support.v4.app.Fragment: void performActivityCreated(android.os.Bundle)"->"android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()" [label="FragmentManagerImpl(noteStateNotSaved)",];
    "android.support.v4.app.Fragment: void performActivityCreated(android.os.Bundle)"->"android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)" [label="Fragment(performCreateView)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)" [label="Fragment(onCreateView)",];
    "android.support.v4.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)"->"android.support.v4.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)"->"android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(android.support.v4.app.Fragment,android.view.View,android.os.Bundle,boolean)" [label="FragmentManagerImpl(dispatchOnFragmentViewCreated)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(android.support.v4.app.Fragment,android.view.View,android.os.Bundle,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(android.support.v4.app.Fragment,android.view.View,android.os.Bundle,boolean)"->"android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(android.support.v4.app.Fragment,android.view.View,android.os.Bundle,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(android.support.v4.app.Fragment,android.view.View,android.os.Bundle,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.view.View,android.os.Bundle)" [label="FragmentManager$FragmentLifecycleCallbacks(onFragmentViewCreated)",];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(android.support.v4.app.Fragment,android.view.View,android.os.Bundle,boolean)"->"android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.view.View,android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: android.view.View getAnimatingAway()" [label="Fragment(getAnimatingAway)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: android.view.View getAnimatingAway()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentContainer: android.view.View onFindViewById(int)" [label="FragmentContainer(onFindViewById)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentContainer: android.view.View onFindViewById(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(android.support.v4.app.Fragment,boolean)" [label="FragmentManagerImpl(dispatchOnFragmentViewDestroyed)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewDestroyed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment)" [label="FragmentManager$FragmentLifecycleCallbacks(onFragmentViewDestroyed)",];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewDestroyed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)" [label="FragmentManagerImpl(saveFragmentViewState)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)" [label="NoSaveStateFrameLayout(wrap)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.NoSaveStateFrameLayout: void <init>(android.content.Context)" [label="NoSaveStateFrameLayout(<init>)",];
    "android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)"->"android.support.v4.app.NoSaveStateFrameLayout: void <init>(android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onAttach(android.content.Context)" [label="Fragment(onAttach)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void onAttach(android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onAttach(android.app.Activity)" [label="Fragment(onAttach)",];
    "android.support.v4.app.Fragment: void onAttach(android.content.Context)"->"android.support.v4.app.Fragment: void onAttach(android.app.Activity)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: android.app.Activity getActivity()" [label="FragmentHostCallback(getActivity)",];
    "android.support.v4.app.Fragment: void onAttach(android.content.Context)"->"android.support.v4.app.FragmentHostCallback: android.app.Activity getActivity()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)" [label="FragmentManagerImpl(getFragment)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)" [label="FragmentManagerImpl(throwException)",];
    "android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)"->"android.support.v4.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)"->"android.support.v4.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: android.content.res.Resources getResources()" [label="Fragment(getResources)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: android.content.res.Resources getResources()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: android.content.res.Resources getResources()"->"android.support.v4.app.FragmentHostCallback: android.content.Context getContext()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performPause()" [label="Fragment(performPause)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void performPause()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performPause()"->"android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onPause()" [label="Fragment(onPause)",];
    "android.support.v4.app.Fragment: void performPause()"->"android.support.v4.app.Fragment: void onPause()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchPause()" [label="FragmentManagerImpl(dispatchPause)",];
    "android.support.v4.app.Fragment: void performPause()"->"android.support.v4.app.FragmentManagerImpl: void dispatchPause()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchPause()"->"android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl$2: void <init>(android.support.v4.app.FragmentManagerImpl,android.view.View,android.view.animation.Animation,android.support.v4.app.Fragment)" [label="FragmentManagerImpl$2(<init>)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl$2: void <init>(android.support.v4.app.FragmentManagerImpl,android.view.View,android.view.animation.Animation,android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View,android.view.animation.Animation)" [label="FragmentManagerImpl$AnimateOnHWLayerIfNeededListener(<init>)",];
    "android.support.v4.app.FragmentManagerImpl$2: void <init>(android.support.v4.app.FragmentManagerImpl,android.view.View,android.view.animation.Animation,android.support.v4.app.Fragment)"->"android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener: void <init>(android.view.View,android.view.animation.Animation)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: android.view.View getAnimatingAway()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: android.view.View getAnimatingAway()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: android.view.View getAnimatingAway()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean)" [label="FragmentManagerImpl(dispatchOnFragmentCreated)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle)" [label="FragmentManager$FragmentLifecycleCallbacks(onFragmentCreated)",];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean)"->"android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean)"->"android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void setStateAfterAnimating(int)" [label="Fragment(setStateAfterAnimating)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void setStateAfterAnimating(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo()" [label="Fragment(ensureAnimationInfo)",];
    "android.support.v4.app.Fragment: void setStateAfterAnimating(int)"->"android.support.v4.app.Fragment: android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment$AnimationInfo: void <init>()" [label="Fragment$AnimationInfo(<init>)",];
    "android.support.v4.app.Fragment: android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo()"->"android.support.v4.app.Fragment$AnimationInfo: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)" [label="Fragment(getLayoutInflater)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory()" [label="FragmentManagerImpl(getLayoutInflaterFactory)",];
    "android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)"->"android.support.v4.app.FragmentManagerImpl: android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getChildFragmentManager()" [label="Fragment(getChildFragmentManager)",];
    "android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)"->"android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getChildFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getChildFragmentManager()"->"android.support.v4.app.Fragment: void instantiateChildFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchResume()" [label="FragmentManagerImpl(dispatchResume)",];
    "android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getChildFragmentManager()"->"android.support.v4.app.FragmentManagerImpl: void dispatchResume()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchResume()"->"android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getChildFragmentManager()"->"android.support.v4.app.FragmentManagerImpl: void dispatchActivityCreated()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchStart()" [label="FragmentManagerImpl(dispatchStart)",];
    "android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getChildFragmentManager()"->"android.support.v4.app.FragmentManagerImpl: void dispatchStart()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchStart()"->"android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getChildFragmentManager()"->"android.support.v4.app.FragmentManagerImpl: void dispatchCreate()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()" [label="FragmentHostCallback(onGetLayoutInflater)",];
    "android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)"->"android.support.v4.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.view.LayoutInflaterCompat: void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)" [label="LayoutInflaterCompat(setFactory)",];
    "android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)"->"android.support.v4.view.LayoutInflaterCompat: void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl: void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)" [label="LayoutInflaterCompat$LayoutInflaterCompatImpl(setFactory)",];
    "android.support.v4.view.LayoutInflaterCompat: void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)"->"android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl: void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.view.ViewCompat: void setSaveFromParentEnabled(android.view.View,boolean)" [label="ViewCompat(setSaveFromParentEnabled)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.view.ViewCompat: void setSaveFromParentEnabled(android.view.View,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.view.ViewCompat$ViewCompatImpl: void setSaveFromParentEnabled(android.view.View,boolean)" [label="ViewCompat$ViewCompatImpl(setSaveFromParentEnabled)",];
    "android.support.v4.view.ViewCompat: void setSaveFromParentEnabled(android.view.View,boolean)"->"android.support.v4.view.ViewCompat$ViewCompatImpl: void setSaveFromParentEnabled(android.view.View,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean)" [label="FragmentManagerImpl(dispatchOnFragmentActivityCreated)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentActivityCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle)" [label="FragmentManager$FragmentLifecycleCallbacks(onFragmentActivityCreated)",];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean)"->"android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentActivityCreated(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean)"->"android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onAttachFragment(android.support.v4.app.Fragment)" [label="Fragment(onAttachFragment)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void onAttachFragment(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentStopped(android.support.v4.app.Fragment,boolean)" [label="FragmentManagerImpl(dispatchOnFragmentStopped)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentStopped(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStopped(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment)" [label="FragmentManager$FragmentLifecycleCallbacks(onFragmentStopped)",];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentStopped(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStopped(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentStopped(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentStopped(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentStopped(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void setAnimatingAway(android.view.View)" [label="Fragment(setAnimatingAway)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void setAnimatingAway(android.view.View)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void setAnimatingAway(android.view.View)"->"android.support.v4.app.Fragment: android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: void onAttachFragment(android.support.v4.app.Fragment)" [label="FragmentHostCallback(onAttachFragment)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentHostCallback: void onAttachFragment(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentHostCallback: android.content.Context getContext()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentHostCallback: android.content.Context getContext()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentDetached(android.support.v4.app.Fragment,boolean)" [label="FragmentManagerImpl(dispatchOnFragmentDetached)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentDetached(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDetached(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment)" [label="FragmentManager$FragmentLifecycleCallbacks(onFragmentDetached)",];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentDetached(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDetached(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentDetached(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentDetached(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentDetached(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performDestroyView()" [label="Fragment(performDestroyView)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void performDestroyView()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doReportNextStart()" [label="LoaderManagerImpl(doReportNextStart)",];
    "android.support.v4.app.Fragment: void performDestroyView()"->"android.support.v4.app.LoaderManagerImpl: void doReportNextStart()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)" [label="SparseArrayCompat(valueAt)",];
    "android.support.v4.app.LoaderManagerImpl: void doReportNextStart()"->"android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SparseArrayCompat: int size()" [label="SparseArrayCompat(size)",];
    "android.support.v4.app.LoaderManagerImpl: void doReportNextStart()"->"android.support.v4.util.SparseArrayCompat: int size()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchDestroyView()" [label="FragmentManagerImpl(dispatchDestroyView)",];
    "android.support.v4.app.Fragment: void performDestroyView()"->"android.support.v4.app.FragmentManagerImpl: void dispatchDestroyView()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchDestroyView()"->"android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onDestroyView()" [label="Fragment(onDestroyView)",];
    "android.support.v4.app.Fragment: void performDestroyView()"->"android.support.v4.app.Fragment: void onDestroyView()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performDestroyView()"->"android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performStop()" [label="Fragment(performStop)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void performStop()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchStop()" [label="FragmentManagerImpl(dispatchStop)",];
    "android.support.v4.app.Fragment: void performStop()"->"android.support.v4.app.FragmentManagerImpl: void dispatchStop()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchStop()"->"android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performStop()"->"android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onStop()" [label="Fragment(onStop)",];
    "android.support.v4.app.Fragment: void performStop()"->"android.support.v4.app.Fragment: void onStop()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void setAnimatingAway(android.view.View)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(android.support.v4.app.Fragment,android.content.Context,boolean)" [label="FragmentManagerImpl(dispatchOnFragmentPreAttached)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(android.support.v4.app.Fragment,android.content.Context,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(android.support.v4.app.Fragment,android.content.Context,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(android.support.v4.app.Fragment,android.content.Context,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreAttached(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.content.Context)" [label="FragmentManager$FragmentLifecycleCallbacks(onFragmentPreAttached)",];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(android.support.v4.app.Fragment,android.content.Context,boolean)"->"android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreAttached(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(android.support.v4.app.Fragment,android.content.Context,boolean)"->"android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)" [label="FragmentManagerImpl(loadAnimation)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentHostCallback: android.content.Context getContext()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: boolean onHasWindowAnimations()" [label="FragmentHostCallback(onHasWindowAnimations)",];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentHostCallback: boolean onHasWindowAnimations()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: int getNextAnim()" [label="Fragment(getNextAnim)",];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.Fragment: int getNextAnim()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentHostCallback: android.content.Context getContext()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)" [label="FragmentManagerImpl(makeOpenCloseAnimation)",];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: int onGetWindowAnimations()" [label="FragmentHostCallback(onGetWindowAnimations)",];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentHostCallback: int onGetWindowAnimations()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)" [label="FragmentManagerImpl(transitToStyleIndex)",];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.Fragment: int getNextAnim()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)" [label="Fragment(onCreateAnimation)",];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)" [label="FragmentManagerImpl(makeFadeAnimation)",];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.Fragment: int getNextAnim()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentHostCallback: android.content.Context getContext()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentHostCallback: android.content.Context getContext()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentHostCallback: android.content.Context getContext()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentHostCallback: android.content.Context getContext()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)"->"android.support.v4.app.FragmentHostCallback: android.content.Context getContext()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentAttached(android.support.v4.app.Fragment,android.content.Context,boolean)" [label="FragmentManagerImpl(dispatchOnFragmentAttached)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentAttached(android.support.v4.app.Fragment,android.content.Context,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentAttached(android.support.v4.app.Fragment,android.content.Context,boolean)"->"android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentAttached(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.content.Context)" [label="FragmentManager$FragmentLifecycleCallbacks(onFragmentAttached)",];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentAttached(android.support.v4.app.Fragment,android.content.Context,boolean)"->"android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentAttached(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment,android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentAttached(android.support.v4.app.Fragment,android.content.Context,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentAttached(android.support.v4.app.Fragment,android.content.Context,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)" [label="FragmentManagerImpl(makeInactive)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void initState()" [label="Fragment(initState)",];
    "android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: void initState()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: void inactivateFragment(java.lang.String)" [label="FragmentHostCallback(inactivateFragment)",];
    "android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)"->"android.support.v4.app.FragmentHostCallback: void inactivateFragment(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SimpleArrayMap: java.lang.Object remove(java.lang.Object)" [label="SimpleArrayMap(remove)",];
    "android.support.v4.app.FragmentHostCallback: void inactivateFragment(java.lang.String)"->"android.support.v4.util.SimpleArrayMap: java.lang.Object remove(java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SimpleArrayMap: java.lang.Object removeAt(int)" [label="SimpleArrayMap(removeAt)",];
    "android.support.v4.util.SimpleArrayMap: java.lang.Object remove(java.lang.Object)"->"android.support.v4.util.SimpleArrayMap: java.lang.Object removeAt(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SimpleArrayMap: void allocArrays(int)" [label="SimpleArrayMap(allocArrays)",];
    "android.support.v4.util.SimpleArrayMap: java.lang.Object removeAt(int)"->"android.support.v4.util.SimpleArrayMap: void allocArrays(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)" [label="SimpleArrayMap(freeArrays)",];
    "android.support.v4.util.SimpleArrayMap: java.lang.Object removeAt(int)"->"android.support.v4.util.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SimpleArrayMap: int indexOfKey(java.lang.Object)" [label="SimpleArrayMap(indexOfKey)",];
    "android.support.v4.util.SimpleArrayMap: java.lang.Object remove(java.lang.Object)"->"android.support.v4.util.SimpleArrayMap: int indexOfKey(java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SimpleArrayMap: java.lang.Object get(java.lang.Object)" [label="SimpleArrayMap(get)",];
    "android.support.v4.app.FragmentHostCallback: void inactivateFragment(java.lang.String)"->"android.support.v4.util.SimpleArrayMap: java.lang.Object get(java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doDestroy()" [label="LoaderManagerImpl(doDestroy)",];
    "android.support.v4.app.FragmentHostCallback: void inactivateFragment(java.lang.String)"->"android.support.v4.app.LoaderManagerImpl: void doDestroy()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doDestroy()"->"android.support.v4.util.SparseArrayCompat: int size()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SparseArrayCompat: void clear()" [label="SparseArrayCompat(clear)",];
    "android.support.v4.app.LoaderManagerImpl: void doDestroy()"->"android.support.v4.util.SparseArrayCompat: void clear()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()" [label="LoaderManagerImpl$LoaderInfo(destroy)",];
    "android.support.v4.app.LoaderManagerImpl: void doDestroy()"->"android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.Loader: void unregisterOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener)" [label="Loader(unregisterOnLoadCanceledListener)",];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()"->"android.support.v4.content.Loader: void unregisterOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()"->"android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.Loader: void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)" [label="Loader(unregisterListener)",];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()"->"android.support.v4.content.Loader: void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManager$LoaderCallbacks: void onLoaderReset(android.support.v4.content.Loader)" [label="LoaderManager$LoaderCallbacks(onLoaderReset)",];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()"->"android.support.v4.app.LoaderManager$LoaderCallbacks: void onLoaderReset(android.support.v4.content.Loader)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.Loader: void reset()" [label="Loader(reset)",];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()"->"android.support.v4.content.Loader: void reset()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.Loader: void onReset()" [label="Loader(onReset)",];
    "android.support.v4.content.Loader: void reset()"->"android.support.v4.content.Loader: void onReset()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doDestroy()"->"android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doDestroy()"->"android.support.v4.util.SparseArrayCompat: int size()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doDestroy()"->"android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doDestroy()"->"android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doDestroy()"->"android.support.v4.util.SparseArrayCompat: void clear()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)" [label="Fragment(onViewCreated)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performStart()" [label="Fragment(performStart)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void performStart()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performStart()"->"android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performStart()"->"android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()" [label="FragmentManagerImpl(execPendingActions)",];
    "android.support.v4.app.Fragment: void performStart()"->"android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void cleanupExec()" [label="FragmentManagerImpl(cleanupExec)",];
    "android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()"->"android.support.v4.app.FragmentManagerImpl: void cleanupExec()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void doPendingDeferredStart()" [label="FragmentManagerImpl(doPendingDeferredStart)",];
    "android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()"->"android.support.v4.app.FragmentManagerImpl: void doPendingDeferredStart()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: boolean hasRunningLoaders()" [label="LoaderManagerImpl(hasRunningLoaders)",];
    "android.support.v4.app.FragmentManagerImpl: void doPendingDeferredStart()"->"android.support.v4.app.LoaderManagerImpl: boolean hasRunningLoaders()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()" [label="FragmentManagerImpl(startPendingDeferredFragments)",];
    "android.support.v4.app.FragmentManagerImpl: void doPendingDeferredStart()"->"android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void optimizeAndExecuteOps(java.util.ArrayList,java.util.ArrayList)" [label="FragmentManagerImpl(optimizeAndExecuteOps)",];
    "android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()"->"android.support.v4.app.FragmentManagerImpl: void optimizeAndExecuteOps(java.util.ArrayList,java.util.ArrayList)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)" [label="FragmentManagerImpl(executePostponedTransaction)",];
    "android.support.v4.app.FragmentManagerImpl: void optimizeAndExecuteOps(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: void cancelTransaction()" [label="FragmentManagerImpl$StartEnterTransitionListener(cancelTransaction)",];
    "android.support.v4.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: void cancelTransaction()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void access$300(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord,boolean,boolean,boolean)" [label="FragmentManagerImpl(access$300)",];
    "android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: void cancelTransaction()"->"android.support.v4.app.FragmentManagerImpl: void access$300(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord,boolean,boolean,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void completeExecute(android.support.v4.app.BackStackRecord,boolean,boolean,boolean)" [label="FragmentManagerImpl(completeExecute)",];
    "android.support.v4.app.FragmentManagerImpl: void access$300(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord,boolean,boolean,boolean)"->"android.support.v4.app.FragmentManagerImpl: void completeExecute(android.support.v4.app.BackStackRecord,boolean,boolean,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentTransition: void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)" [label="FragmentTransition(startTransitions)",];
    "android.support.v4.app.FragmentManagerImpl: void completeExecute(android.support.v4.app.BackStackRecord,boolean,boolean,boolean)"->"android.support.v4.app.FragmentTransition: void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)" [label="FragmentManagerImpl(executeOps)",];
    "android.support.v4.app.FragmentManagerImpl: void completeExecute(android.support.v4.app.BackStackRecord,boolean,boolean,boolean)"->"android.support.v4.app.FragmentManagerImpl: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void completeExecute(android.support.v4.app.BackStackRecord,boolean,boolean,boolean)"->"android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: boolean interactsWith(int)" [label="BackStackRecord(interactsWith)",];
    "android.support.v4.app.FragmentManagerImpl: void completeExecute(android.support.v4.app.BackStackRecord,boolean,boolean,boolean)"->"android.support.v4.app.BackStackRecord: boolean interactsWith(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: android.support.v4.app.BackStackRecord access$100(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener)" [label="FragmentManagerImpl$StartEnterTransitionListener(access$100)",];
    "android.support.v4.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: android.support.v4.app.BackStackRecord access$100(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: boolean access$000(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener)" [label="FragmentManagerImpl$StartEnterTransitionListener(access$000)",];
    "android.support.v4.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: boolean access$000(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: void cancelTransaction()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: android.support.v4.app.BackStackRecord access$100(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()" [label="FragmentManagerImpl$StartEnterTransitionListener(completeTransaction)",];
    "android.support.v4.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void setOnStartEnterTransitionListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener)" [label="Fragment(setOnStartEnterTransitionListener)",];
    "android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()"->"android.support.v4.app.Fragment: void setOnStartEnterTransitionListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment$OnStartEnterTransitionListener: void startListening()" [label="Fragment$OnStartEnterTransitionListener(startListening)",];
    "android.support.v4.app.Fragment: void setOnStartEnterTransitionListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener)"->"android.support.v4.app.Fragment$OnStartEnterTransitionListener: void startListening()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void setOnStartEnterTransitionListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener)"->"android.support.v4.app.Fragment: android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void startPostponedEnterTransition()" [label="Fragment(startPostponedEnterTransition)",];
    "android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()"->"android.support.v4.app.Fragment: void startPostponedEnterTransition()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void callStartTransitionListener()" [label="Fragment(callStartTransitionListener)",];
    "android.support.v4.app.Fragment: void startPostponedEnterTransition()"->"android.support.v4.app.Fragment: void callStartTransitionListener()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment$OnStartEnterTransitionListener: void onStartEnterTransition()" [label="Fragment$OnStartEnterTransitionListener(onStartEnterTransition)",];
    "android.support.v4.app.Fragment: void callStartTransitionListener()"->"android.support.v4.app.Fragment$OnStartEnterTransitionListener: void onStartEnterTransition()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: android.os.Handler getHandler()" [label="FragmentHostCallback(getHandler)",];
    "android.support.v4.app.Fragment: void startPostponedEnterTransition()"->"android.support.v4.app.FragmentHostCallback: android.os.Handler getHandler()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void startPostponedEnterTransition()"->"android.support.v4.app.Fragment: android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment$1: void <init>(android.support.v4.app.Fragment)" [label="Fragment$1(<init>)",];
    "android.support.v4.app.Fragment: void startPostponedEnterTransition()"->"android.support.v4.app.Fragment$1: void <init>(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void startPostponedEnterTransition()"->"android.support.v4.app.FragmentHostCallback: android.os.Handler getHandler()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: boolean isPostponed()" [label="Fragment(isPostponed)",];
    "android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()"->"android.support.v4.app.Fragment: boolean isPostponed()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()"->"android.support.v4.app.FragmentManagerImpl: void access$300(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord,boolean,boolean,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: boolean access$000(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: boolean isReady()" [label="FragmentManagerImpl$StartEnterTransitionListener(isReady)",];
    "android.support.v4.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: boolean isReady()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)" [label="BackStackRecord(interactsWith)",];
    "android.support.v4.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: android.support.v4.app.BackStackRecord access$100(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)" [label="FragmentManagerImpl(executeOpsTogether)",];
    "android.support.v4.app.FragmentManagerImpl: void optimizeAndExecuteOps(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.FragmentManagerImpl: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)" [label="BackStackRecord(bumpBackStackNesting)",];
    "android.support.v4.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.FragmentTransition: void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentsToInvisible()" [label="FragmentManagerImpl(moveFragmentsToInvisible)",];
    "android.support.v4.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.FragmentManagerImpl: void moveFragmentsToInvisible()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentsToInvisible()"->"android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentsToInvisible()"->"android.support.v4.app.Fragment: int getNextAnim()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: int getNextTransition()" [label="Fragment(getNextTransition)",];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentsToInvisible()"->"android.support.v4.app.Fragment: int getNextTransition()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void freeBackStackIndex(int)" [label="FragmentManagerImpl(freeBackStackIndex)",];
    "android.support.v4.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.FragmentManagerImpl: void freeBackStackIndex(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int)" [label="FragmentManagerImpl(postponePostponableTransactions)",];
    "android.support.v4.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: void <init>(android.support.v4.app.BackStackRecord,boolean)" [label="FragmentManagerImpl$StartEnterTransitionListener(<init>)",];
    "android.support.v4.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener: void <init>(android.support.v4.app.BackStackRecord,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void setOnStartPostponedListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener)" [label="BackStackRecord(setOnStartPostponedListener)",];
    "android.support.v4.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.BackStackRecord: void setOnStartPostponedListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void setOnStartPostponedListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener)"->"android.support.v4.app.Fragment$OnStartEnterTransitionListener: void onStartEnterTransition()" [label="GUI (NULL)",style=bold,color=firebrick,];
    "android.support.v4.app.BackStackRecord: void setOnStartPostponedListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener)"->"android.support.v4.app.Fragment: void setOnStartEnterTransitionListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: boolean isFragmentPostponed(android.support.v4.app.BackStackRecord$Op)" [label="BackStackRecord(isFragmentPostponed)",];
    "android.support.v4.app.BackStackRecord: void setOnStartPostponedListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener)"->"android.support.v4.app.BackStackRecord: boolean isFragmentPostponed(android.support.v4.app.BackStackRecord$Op)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: boolean isFragmentPostponed(android.support.v4.app.BackStackRecord$Op)"->"android.support.v4.app.Fragment: boolean isPostponed()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executePopOps()" [label="BackStackRecord(executePopOps)",];
    "android.support.v4.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.BackStackRecord: void executePopOps()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment)" [label="FragmentManagerImpl(showFragment)",];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void setNextAnim(int)" [label="Fragment(setNextAnim)",];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.Fragment: void setNextAnim(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void setNextAnim(int)"->"android.support.v4.app.Fragment: android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment)" [label="FragmentManagerImpl(detachFragment)",];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)" [label="FragmentManagerImpl(addFragment)",];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment)" [label="FragmentManagerImpl(moveToState)",];
    "android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment)"->"android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)" [label="FragmentManagerImpl(makeActive)",];
    "android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void setIndex(int,android.support.v4.app.Fragment)" [label="Fragment(setIndex)",];
    "android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: void setIndex(int,android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: void setIndex(int,android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void setNextTransition(int,int)" [label="Fragment(setNextTransition)",];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.Fragment: void setNextTransition(int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void setNextTransition(int,int)"->"android.support.v4.app.Fragment: android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.Fragment: void setNextAnim(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.Fragment: void setNextAnim(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment)" [label="FragmentManagerImpl(attachFragment)",];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.Fragment: void setNextAnim(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: int reverseTransit(int)" [label="FragmentManagerImpl(reverseTransit)",];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.FragmentManagerImpl: int reverseTransit(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment)" [label="FragmentManagerImpl(hideFragment)",];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.Fragment: void setNextAnim(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment)" [label="FragmentManagerImpl(removeFragment)",];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: boolean isInBackStack()" [label="Fragment(isInBackStack)",];
    "android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: boolean isInBackStack()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executePopOps()"->"android.support.v4.app.Fragment: void setNextAnim(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: boolean isPostponed()" [label="BackStackRecord(isPostponed)",];
    "android.support.v4.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.BackStackRecord: boolean isPostponed()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: boolean isPostponed()"->"android.support.v4.app.BackStackRecord: boolean isFragmentPostponed(android.support.v4.app.BackStackRecord$Op)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.FragmentManagerImpl: void moveFragmentsToInvisible()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()" [label="BackStackRecord(executeOps)",];
    "android.support.v4.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.BackStackRecord: void executeOps()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.Fragment: void setNextAnim(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.Fragment: void setNextAnim(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.Fragment: void setNextAnim(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.Fragment: void setNextAnim(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.Fragment: void setNextAnim(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.Fragment: void setNextAnim(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void executeOps()"->"android.support.v4.app.Fragment: void setNextTransition(int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.FragmentTransition: void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void reportBackStackChanged()" [label="FragmentManagerImpl(reportBackStackChanged)",];
    "android.support.v4.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.FragmentManagerImpl: void reportBackStackChanged()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManager$OnBackStackChangedListener: void onBackStackChanged()" [label="FragmentManager$OnBackStackChangedListener(onBackStackChanged)",];
    "android.support.v4.app.FragmentManagerImpl: void reportBackStackChanged()"->"android.support.v4.app.FragmentManager$OnBackStackChangedListener: void onBackStackChanged()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord: void expandReplaceOps(java.util.ArrayList)" [label="BackStackRecord(expandReplaceOps)",];
    "android.support.v4.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)"->"android.support.v4.app.BackStackRecord: void expandReplaceOps(java.util.ArrayList)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BackStackRecord$Op: void <init>()" [label="BackStackRecord$Op(<init>)",];
    "android.support.v4.app.BackStackRecord: void expandReplaceOps(java.util.ArrayList)"->"android.support.v4.app.BackStackRecord$Op: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void optimizeAndExecuteOps(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void optimizeAndExecuteOps(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void ensureExecReady(boolean)" [label="FragmentManagerImpl(ensureExecReady)",];
    "android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()"->"android.support.v4.app.FragmentManagerImpl: void ensureExecReady(boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void checkStateLoss()" [label="FragmentManagerImpl(checkStateLoss)",];
    "android.support.v4.app.FragmentManagerImpl: void ensureExecReady(boolean)"->"android.support.v4.app.FragmentManagerImpl: void checkStateLoss()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void ensureExecReady(boolean)"->"android.support.v4.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void ensureExecReady(boolean)"->"android.support.v4.app.FragmentHostCallback: android.os.Handler getHandler()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)" [label="FragmentManagerImpl(generateOpsForPendingActions)",];
    "android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()"->"android.support.v4.app.FragmentManagerImpl: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentHostCallback: android.os.Handler getHandler()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl$OpGenerator: boolean generateOps(java.util.ArrayList,java.util.ArrayList)" [label="FragmentManagerImpl$OpGenerator(generateOps)",];
    "android.support.v4.app.FragmentManagerImpl: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)"->"android.support.v4.app.FragmentManagerImpl$OpGenerator: boolean generateOps(java.util.ArrayList,java.util.ArrayList)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()"->"android.support.v4.app.FragmentManagerImpl: void cleanupExec()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doReportStart()" [label="LoaderManagerImpl(doReportStart)",];
    "android.support.v4.app.Fragment: void performStart()"->"android.support.v4.app.LoaderManagerImpl: void doReportStart()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void reportStart()" [label="LoaderManagerImpl$LoaderInfo(reportStart)",];
    "android.support.v4.app.LoaderManagerImpl: void doReportStart()"->"android.support.v4.app.LoaderManagerImpl$LoaderInfo: void reportStart()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)" [label="LoaderManagerImpl$LoaderInfo(callOnLoadFinished)",];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void reportStart()"->"android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManager$LoaderCallbacks: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)" [label="LoaderManager$LoaderCallbacks(onLoadFinished)",];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)"->"android.support.v4.app.LoaderManager$LoaderCallbacks: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.Loader: java.lang.String dataToString(java.lang.Object)" [label="Loader(dataToString)",];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)"->"android.support.v4.content.Loader: java.lang.String dataToString(java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)" [label="DebugUtils(buildShortClassTag)",];
    "android.support.v4.content.Loader: java.lang.String dataToString(java.lang.Object)"->"android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doReportStart()"->"android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doReportStart()"->"android.support.v4.util.SparseArrayCompat: int size()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onStart()" [label="Fragment(onStart)",];
    "android.support.v4.app.Fragment: void performStart()"->"android.support.v4.app.Fragment: void onStart()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)" [label="FragmentHostCallback(getLoaderManager)",];
    "android.support.v4.app.Fragment: void onStart()"->"android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void updateHostController(android.support.v4.app.FragmentHostCallback)" [label="LoaderManagerImpl(updateHostController)",];
    "android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)"->"android.support.v4.app.LoaderManagerImpl: void updateHostController(android.support.v4.app.FragmentHostCallback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void <init>(java.lang.String,android.support.v4.app.FragmentHostCallback,boolean)" [label="LoaderManagerImpl(<init>)",];
    "android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)"->"android.support.v4.app.LoaderManagerImpl: void <init>(java.lang.String,android.support.v4.app.FragmentHostCallback,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SparseArrayCompat: void <init>()" [label="SparseArrayCompat(<init>)",];
    "android.support.v4.app.LoaderManagerImpl: void <init>(java.lang.String,android.support.v4.app.FragmentHostCallback,boolean)"->"android.support.v4.util.SparseArrayCompat: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManager: void <init>()" [label="LoaderManager(<init>)",];
    "android.support.v4.app.LoaderManagerImpl: void <init>(java.lang.String,android.support.v4.app.FragmentHostCallback,boolean)"->"android.support.v4.app.LoaderManager: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void <init>(java.lang.String,android.support.v4.app.FragmentHostCallback,boolean)"->"android.support.v4.util.SparseArrayCompat: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)"->"android.support.v4.util.SimpleArrayMap: java.lang.Object get(java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)" [label="SimpleArrayMap(put)",];
    "android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)"->"android.support.v4.util.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SimpleArrayMap: void <init>()" [label="SimpleArrayMap(<init>)",];
    "android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)"->"android.support.v4.util.SimpleArrayMap: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doStart()" [label="LoaderManagerImpl(doStart)",];
    "android.support.v4.app.Fragment: void onStart()"->"android.support.v4.app.LoaderManagerImpl: void doStart()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doStart()"->"android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()" [label="LoaderManagerImpl$LoaderInfo(start)",];
    "android.support.v4.app.LoaderManagerImpl: void doStart()"->"android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.Loader: void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener)" [label="Loader(registerListener)",];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()"->"android.support.v4.content.Loader: void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.Loader: void startLoading()" [label="Loader(startLoading)",];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()"->"android.support.v4.content.Loader: void startLoading()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.Loader: void onStartLoading()" [label="Loader(onStartLoading)",];
    "android.support.v4.content.Loader: void startLoading()"->"android.support.v4.content.Loader: void onStartLoading()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManager$LoaderCallbacks: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)" [label="LoaderManager$LoaderCallbacks(onCreateLoader)",];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()"->"android.support.v4.app.LoaderManager$LoaderCallbacks: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.Loader: void registerOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener)" [label="Loader(registerOnLoadCanceledListener)",];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()"->"android.support.v4.content.Loader: void registerOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doStart()"->"android.support.v4.util.SparseArrayCompat: int size()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performStart()"->"android.support.v4.app.FragmentManagerImpl: void dispatchStart()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void restoreViewState(android.os.Bundle)" [label="Fragment(restoreViewState)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void restoreViewState(android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onViewStateRestored(android.os.Bundle)" [label="Fragment(onViewStateRestored)",];
    "android.support.v4.app.Fragment: void restoreViewState(android.os.Bundle)"->"android.support.v4.app.Fragment: void onViewStateRestored(android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void restoreViewState(android.os.Bundle)"->"android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performDestroy()" [label="Fragment(performDestroy)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void performDestroy()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performDestroy()"->"android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onDestroy()" [label="Fragment(onDestroy)",];
    "android.support.v4.app.Fragment: void performDestroy()"->"android.support.v4.app.Fragment: void onDestroy()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onDestroy()"->"android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onDestroy()"->"android.support.v4.app.LoaderManagerImpl: void doDestroy()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()" [label="FragmentManagerImpl(dispatchDestroy)",];
    "android.support.v4.app.Fragment: void performDestroy()"->"android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()"->"android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()"->"android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.view.ViewCompat: void setSaveFromParentEnabled(android.view.View,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentStarted(android.support.v4.app.Fragment,boolean)" [label="FragmentManagerImpl(dispatchOnFragmentStarted)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentStarted(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentStarted(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentStarted(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentStarted(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStarted(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment)" [label="FragmentManager$FragmentLifecycleCallbacks(onFragmentStarted)",];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentStarted(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStarted(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: int getStateAfterAnimating()" [label="Fragment(getStateAfterAnimating)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: int getStateAfterAnimating()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performReallyStop()" [label="Fragment(performReallyStop)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void performReallyStop()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performReallyStop()"->"android.support.v4.app.FragmentHostCallback: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: boolean getRetainLoaders()" [label="FragmentHostCallback(getRetainLoaders)",];
    "android.support.v4.app.Fragment: void performReallyStop()"->"android.support.v4.app.FragmentHostCallback: boolean getRetainLoaders()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchReallyStop()" [label="FragmentManagerImpl(dispatchReallyStop)",];
    "android.support.v4.app.Fragment: void performReallyStop()"->"android.support.v4.app.FragmentManagerImpl: void dispatchReallyStop()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchReallyStop()"->"android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doStop()" [label="LoaderManagerImpl(doStop)",];
    "android.support.v4.app.Fragment: void performReallyStop()"->"android.support.v4.app.LoaderManagerImpl: void doStop()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doStop()"->"android.support.v4.util.SparseArrayCompat: int size()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()" [label="LoaderManagerImpl$LoaderInfo(stop)",];
    "android.support.v4.app.LoaderManagerImpl: void doStop()"->"android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()"->"android.support.v4.content.Loader: void unregisterOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.Loader: void stopLoading()" [label="Loader(stopLoading)",];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()"->"android.support.v4.content.Loader: void stopLoading()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.Loader: void onStopLoading()" [label="Loader(onStopLoading)",];
    "android.support.v4.content.Loader: void stopLoading()"->"android.support.v4.content.Loader: void onStopLoading()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()"->"android.support.v4.content.Loader: void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doStop()"->"android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doRetain()" [label="LoaderManagerImpl(doRetain)",];
    "android.support.v4.app.Fragment: void performReallyStop()"->"android.support.v4.app.LoaderManagerImpl: void doRetain()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doRetain()"->"android.support.v4.util.SparseArrayCompat: int size()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl$LoaderInfo: void retain()" [label="LoaderManagerImpl$LoaderInfo(retain)",];
    "android.support.v4.app.LoaderManagerImpl: void doRetain()"->"android.support.v4.app.LoaderManagerImpl$LoaderInfo: void retain()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.LoaderManagerImpl: void doRetain()"->"android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(android.support.v4.app.Fragment,android.view.View,android.os.Bundle,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentResumed(android.support.v4.app.Fragment,boolean)" [label="FragmentManagerImpl(dispatchOnFragmentResumed)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentResumed(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentResumed(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentResumed(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentResumed(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentResumed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment)" [label="FragmentManager$FragmentLifecycleCallbacks(onFragmentResumed)",];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentResumed(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentResumed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(android.support.v4.app.Fragment,boolean)" [label="FragmentManagerImpl(dispatchOnFragmentDestroyed)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDestroyed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment)" [label="FragmentManager$FragmentLifecycleCallbacks(onFragmentDestroyed)",];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDestroyed(android.support.v4.app.FragmentManager,android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(android.support.v4.app.Fragment,boolean)"->"android.support.v4.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(android.support.v4.app.Fragment,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentHostCallback: android.content.Context getContext()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: boolean onShouldSaveFragmentState(android.support.v4.app.Fragment)" [label="FragmentHostCallback(onShouldSaveFragmentState)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentHostCallback: boolean onShouldSaveFragmentState(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void setStateAfterAnimating(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performCreate(android.os.Bundle)" [label="Fragment(performCreate)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void performCreate(android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performCreate(android.os.Bundle)"->"android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onCreate(android.os.Bundle)" [label="Fragment(onCreate)",];
    "android.support.v4.app.Fragment: void performCreate(android.os.Bundle)"->"android.support.v4.app.Fragment: void onCreate(android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onCreate(android.os.Bundle)"->"android.support.v4.app.Fragment: void restoreChildFragmentState(android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: boolean isStateAtLeast(int)" [label="FragmentManagerImpl(isStateAtLeast)",];
    "android.support.v4.app.Fragment: void onCreate(android.os.Bundle)"->"android.support.v4.app.FragmentManagerImpl: boolean isStateAtLeast(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onCreate(android.os.Bundle)"->"android.support.v4.app.FragmentManagerImpl: void dispatchCreate()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performCreate(android.os.Bundle)"->"android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performResume()" [label="Fragment(performResume)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void performResume()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performResume()"->"android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performResume()"->"android.support.v4.app.FragmentManagerImpl: void dispatchResume()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performResume()"->"android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onResume()" [label="Fragment(onResume)",];
    "android.support.v4.app.Fragment: void performResume()"->"android.support.v4.app.Fragment: void onResume()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performResume()"->"android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performResume()"->"android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void setAnimatingAway(android.view.View)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl()" [label="FragmentHostCallback(getFragmentManagerImpl)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.FragmentHostCallback: android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performDetach()" [label="Fragment(performDetach)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void performDetach()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performDetach()"->"android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void performDetach()"->"android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onDetach()" [label="Fragment(onDetach)",];
    "android.support.v4.app.Fragment: void performDetach()"->"android.support.v4.app.Fragment: void onDetach()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)"->"android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: int getNextTransition()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: boolean isInBackStack()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void completeShowHideFragment(android.support.v4.app.Fragment)" [label="FragmentManagerImpl(completeShowHideFragment)",];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)"->"android.support.v4.app.FragmentManagerImpl: void completeShowHideFragment(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,android.view.animation.Animation)" [label="FragmentManagerImpl(setHWLayerAnimListenerIfAlpha)",];
    "android.support.v4.app.FragmentManagerImpl: void completeShowHideFragment(android.support.v4.app.Fragment)"->"android.support.v4.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,android.view.animation.Animation)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: boolean isHideReplaced()" [label="Fragment(isHideReplaced)",];
    "android.support.v4.app.FragmentManagerImpl: void completeShowHideFragment(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: boolean isHideReplaced()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: int getNextTransitionStyle()" [label="Fragment(getNextTransitionStyle)",];
    "android.support.v4.app.FragmentManagerImpl: void completeShowHideFragment(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: int getNextTransitionStyle()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void completeShowHideFragment(android.support.v4.app.Fragment)"->"android.support.v4.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,android.view.animation.Animation)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void setHideReplaced(boolean)" [label="Fragment(setHideReplaced)",];
    "android.support.v4.app.FragmentManagerImpl: void completeShowHideFragment(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: void setHideReplaced(boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void setHideReplaced(boolean)"->"android.support.v4.app.Fragment: android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void completeShowHideFragment(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: int getNextTransition()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.Fragment: void onHiddenChanged(boolean)" [label="Fragment(onHiddenChanged)",];
    "android.support.v4.app.FragmentManagerImpl: void completeShowHideFragment(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: void onHiddenChanged(boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void completeShowHideFragment(android.support.v4.app.Fragment)"->"android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void completeShowHideFragment(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: boolean isHideReplaced()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment findFragmentUnder(android.support.v4.app.Fragment)" [label="FragmentManagerImpl(findFragmentUnder)",];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)"->"android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment findFragmentUnder(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: int getNextTransitionStyle()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)"->"android.support.v4.app.FragmentManagerImpl: void setHWLayerAnimListenerIfAlpha(android.view.View,android.view.animation.Animation)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: int getNextTransitionStyle()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)"->"android.support.v4.app.Fragment: int getNextTransition()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)"->"android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)"->"android.support.v4.app.LoaderManagerImpl: boolean hasRunningLoaders()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()" [label="FragmentHostCallback(onSupportInvalidateOptionsMenu)",];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)"->"android.support.v4.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)"->"android.support.v4.app.LoaderManagerImpl: boolean hasRunningLoaders()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)"->"android.support.v4.app.FragmentManagerImpl: void moveFragmentToExpectedState(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentController: void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap)" [label="FragmentController(restoreLoaderNonConfig)",];
    "android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)"->"android.support.v4.app.FragmentController: void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentHostCallback: void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap)" [label="FragmentHostCallback(restoreLoaderNonConfig)",];
    "android.support.v4.app.FragmentController: void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap)"->"android.support.v4.app.FragmentHostCallback: void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)"->"android.support.v4.util.SparseArrayCompat: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentController: void attachHost(android.support.v4.app.Fragment)" [label="FragmentController(attachHost)",];
    "android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)"->"android.support.v4.app.FragmentController: void attachHost(android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentController: void attachHost(android.support.v4.app.Fragment)"->"android.support.v4.app.FragmentManagerImpl: void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)" [label="SparseArrayCompat(put)",];
    "android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)"->"android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.ContainerHelpers: int idealIntArraySize(int)" [label="ContainerHelpers(idealIntArraySize)",];
    "android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)"->"android.support.v4.util.ContainerHelpers: int idealIntArraySize(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.ContainerHelpers: int idealByteArraySize(int)" [label="ContainerHelpers(idealByteArraySize)",];
    "android.support.v4.util.ContainerHelpers: int idealIntArraySize(int)"->"android.support.v4.util.ContainerHelpers: int idealByteArraySize(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.ContainerHelpers: int binarySearch(int[],int,int)" [label="ContainerHelpers(binarySearch)",];
    "android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)"->"android.support.v4.util.ContainerHelpers: int binarySearch(int[],int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)"->"android.support.v4.util.ContainerHelpers: int binarySearch(int[],int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SparseArrayCompat: void gc()" [label="SparseArrayCompat(gc)",];
    "android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)"->"android.support.v4.util.SparseArrayCompat: void gc()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentController: void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)" [label="FragmentController(restoreAllState)",];
    "android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)"->"android.support.v4.app.FragmentController: void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.FragmentController: void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)"->"android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.app.BaseFragmentActivityGingerbread: void onCreate(android.os.Bundle)" [label="BaseFragmentActivityGingerbread(onCreate)",];
    "android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)"->"android.support.v4.app.BaseFragmentActivityGingerbread: void onCreate(android.os.Bundle)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SparseArrayCompat: void <init>(int)" [label="SparseArrayCompat(<init>)",];
    "android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)"->"android.support.v4.util.SparseArrayCompat: void <init>(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SparseArrayCompat: void <init>(int)"->"android.support.v4.util.ContainerHelpers: int idealIntArraySize(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatActivity: android.support.v7.app.AppCompatDelegate getDelegate()" [label="AppCompatActivity(getDelegate)",];
    "android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatActivity: android.support.v7.app.AppCompatDelegate getDelegate()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegate: android.support.v7.app.AppCompatDelegate create(android.app.Activity,android.support.v7.app.AppCompatCallback)" [label="AppCompatDelegate(create)",];
    "android.support.v7.app.AppCompatActivity: android.support.v7.app.AppCompatDelegate getDelegate()"->"android.support.v7.app.AppCompatDelegate: android.support.v7.app.AppCompatDelegate create(android.app.Activity,android.support.v7.app.AppCompatCallback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegate: android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="AppCompatDelegate(create)",];
    "android.support.v7.app.AppCompatDelegate: android.support.v7.app.AppCompatDelegate create(android.app.Activity,android.support.v7.app.AppCompatCallback)"->"android.support.v7.app.AppCompatDelegate: android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.os.BuildCompat: boolean isAtLeastN()" [label="BuildCompat(isAtLeastN)",];
    "android.support.v7.app.AppCompatDelegate: android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v4.os.BuildCompat: boolean isAtLeastN()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegateImplV11: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="AppCompatDelegateImplV11(<init>)",];
    "android.support.v7.app.AppCompatDelegate: android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.app.AppCompatDelegateImplV11: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegateImplV9: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="AppCompatDelegateImplV9(<init>)",];
    "android.support.v7.app.AppCompatDelegateImplV11: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.app.AppCompatDelegateImplV9: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegateImplBase: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="AppCompatDelegateImplBase(<init>)",];
    "android.support.v7.app.AppCompatDelegateImplV9: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.app.AppCompatDelegateImplBase: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.TintTypedArray: void recycle()" [label="TintTypedArray(recycle)",];
    "android.support.v7.app.AppCompatDelegateImplBase: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.widget.TintTypedArray: void recycle()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.TintTypedArray: android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])" [label="TintTypedArray(obtainStyledAttributes)",];
    "android.support.v7.app.AppCompatDelegateImplBase: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.widget.TintTypedArray: android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.TintTypedArray: void <init>(android.content.Context,android.content.res.TypedArray)" [label="TintTypedArray(<init>)",];
    "android.support.v7.widget.TintTypedArray: android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])"->"android.support.v7.widget.TintTypedArray: void <init>(android.content.Context,android.content.res.TypedArray)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)" [label="TintTypedArray(getDrawableIfKnown)",];
    "android.support.v7.app.AppCompatDelegateImplBase: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager get()" [label="AppCompatDrawableManager(get)",];
    "android.support.v7.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)"->"android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager get()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: void <init>()" [label="AppCompatDrawableManager(<init>)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager get()"->"android.support.v7.widget.AppCompatDrawableManager: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager)" [label="AppCompatDrawableManager(installDefaultInflateDelegates)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.support.v7.widget.AppCompatDrawableManager get()"->"android.support.v7.widget.AppCompatDrawableManager: void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate)" [label="AppCompatDrawableManager(addDelegate)",];
    "android.support.v7.widget.AppCompatDrawableManager: void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager)"->"android.support.v7.widget.AppCompatDrawableManager: void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.ArrayMap: void <init>()" [label="ArrayMap(<init>)",];
    "android.support.v7.widget.AppCompatDrawableManager: void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate)"->"android.support.v4.util.ArrayMap: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.ArrayMap: void <init>()"->"android.support.v4.util.SimpleArrayMap: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate)"->"android.support.v4.util.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate: void <init>()" [label="AppCompatDrawableManager$VdcInflateDelegate(<init>)",];
    "android.support.v7.widget.AppCompatDrawableManager: void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager)"->"android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager)"->"android.support.v7.widget.AppCompatDrawableManager: void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate: void <init>()" [label="AppCompatDrawableManager$AvdcInflateDelegate(<init>)",];
    "android.support.v7.widget.AppCompatDrawableManager: void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager)"->"android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)" [label="AppCompatDrawableManager(getDrawable)",];
    "android.support.v7.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)"->"android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)" [label="DrawableUtils(fixDrawable)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)"->"android.support.v7.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.DrawableUtils: void fixVectorDrawableTinting(android.graphics.drawable.Drawable)" [label="DrawableUtils(fixVectorDrawableTinting)",];
    "android.support.v7.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)"->"android.support.v7.widget.DrawableUtils: void fixVectorDrawableTinting(android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: void checkVectorDrawableSetup(android.content.Context)" [label="AppCompatDrawableManager(checkVectorDrawableSetup)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)"->"android.support.v7.widget.AppCompatDrawableManager: void checkVectorDrawableSetup(android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: boolean isVectorDrawable(android.graphics.drawable.Drawable)" [label="AppCompatDrawableManager(isVectorDrawable)",];
    "android.support.v7.widget.AppCompatDrawableManager: void checkVectorDrawableSetup(android.content.Context)"->"android.support.v7.widget.AppCompatDrawableManager: boolean isVectorDrawable(android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)" [label="AppCompatDrawableManager(getDrawable)",];
    "android.support.v7.widget.AppCompatDrawableManager: void checkVectorDrawableSetup(android.content.Context)"->"android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)" [label="ContextCompat(getDrawable)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)"->"android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.ContextCompatApi21: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)" [label="ContextCompatApi21(getDrawable)",];
    "android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)"->"android.support.v4.content.ContextCompatApi21: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)" [label="AppCompatDrawableManager(tintDrawable)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)"->"android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)" [label="DrawableUtils(canSafelyMutateDrawable)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)"->"android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)"->"android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getWrappedDrawable()" [label="DrawableWrapper(getWrappedDrawable)",];
    "android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)"->"android.support.v7.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getWrappedDrawable()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)"->"android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getWrappedDrawable()" [label="DrawableWrapper(getWrappedDrawable)",];
    "android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)"->"android.support.v4.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getWrappedDrawable()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)"->"android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)" [label="AppCompatDrawableManager(setPorterDuffColorFilter)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)" [label="AppCompatDrawableManager(getPorterDuffColorFilter)",];
    "android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)"->"android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)" [label="AppCompatDrawableManager$ColorFilterLruCache(put)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)"->"android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)" [label="AppCompatDrawableManager$ColorFilterLruCache(generateCacheKey)",];
    "android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)"->"android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)" [label="LruCache(put)",];
    "android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)"->"android.support.v4.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)" [label="LruCache(safeSizeOf)",];
    "android.support.v4.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)"->"android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)" [label="LruCache(sizeOf)",];
    "android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)"->"android.support.v4.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)"->"android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)" [label="LruCache(entryRemoved)",];
    "android.support.v4.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)"->"android.support.v4.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LruCache: void trimToSize(int)" [label="LruCache(trimToSize)",];
    "android.support.v4.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)"->"android.support.v4.util.LruCache: void trimToSize(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LruCache: void trimToSize(int)"->"android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LruCache: void trimToSize(int)"->"android.support.v4.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)" [label="AppCompatDrawableManager$ColorFilterLruCache(get)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)"->"android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)" [label="LruCache(get)",];
    "android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)"->"android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)"->"android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)"->"android.support.v4.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LruCache: java.lang.Object create(java.lang.Object)" [label="LruCache(create)",];
    "android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)"->"android.support.v4.util.LruCache: java.lang.Object create(java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)"->"android.support.v4.util.LruCache: void trimToSize(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)"->"android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)"->"android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)" [label="DrawableCompat(setTintList)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)" [label="DrawableCompat$DrawableImpl(setTintList)",];
    "android.support.v4.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)"->"android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)" [label="ThemeUtils(getThemeAttrColor)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)"->"android.support.v7.widget.TintTypedArray: android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)"->"android.support.v7.widget.TintTypedArray: void recycle()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.TintTypedArray: int getColor(int,int)" [label="TintTypedArray(getColor)",];
    "android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)"->"android.support.v7.widget.TintTypedArray: int getColor(int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)"->"android.support.v7.widget.TintTypedArray: void recycle()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)" [label="DrawableCompat(setTintMode)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v4.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)" [label="DrawableCompat$DrawableImpl(setTintMode)",];
    "android.support.v4.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)"->"android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)" [label="DrawableCompat(wrap)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v4.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)" [label="DrawableCompat$DrawableImpl(wrap)",];
    "android.support.v4.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)"->"android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)" [label="AppCompatDrawableManager(getTintList)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)" [label="AppCompatResources(getColorStateList)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.AppCompatResources: void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList)" [label="AppCompatResources(addColorStateListToCache)",];
    "android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)"->"android.support.v7.content.res.AppCompatResources: void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.AppCompatResources$ColorStateListCacheEntry: void <init>(android.content.res.ColorStateList,android.content.res.Configuration)" [label="AppCompatResources$ColorStateListCacheEntry(<init>)",];
    "android.support.v7.content.res.AppCompatResources: void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList)"->"android.support.v7.content.res.AppCompatResources$ColorStateListCacheEntry: void <init>(android.content.res.ColorStateList,android.content.res.Configuration)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int)" [label="AppCompatResources(getCachedColorStateList)",];
    "android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)"->"android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)" [label="ContextCompat(getColorStateList)",];
    "android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)"->"android.support.v4.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.content.ContextCompatApi23: android.content.res.ColorStateList getColorStateList(android.content.Context,int)" [label="ContextCompatApi23(getColorStateList)",];
    "android.support.v4.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)"->"android.support.v4.content.ContextCompatApi23: android.content.res.ColorStateList getColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList inflateColorStateList(android.content.Context,int)" [label="AppCompatResources(inflateColorStateList)",];
    "android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)"->"android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList inflateColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.AppCompatResources: boolean isColorInt(android.content.Context,int)" [label="AppCompatResources(isColorInt)",];
    "android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList inflateColorStateList(android.content.Context,int)"->"android.support.v7.content.res.AppCompatResources: boolean isColorInt(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.AppCompatResources: android.util.TypedValue getTypedValue()" [label="AppCompatResources(getTypedValue)",];
    "android.support.v7.content.res.AppCompatResources: boolean isColorInt(android.content.Context,int)"->"android.support.v7.content.res.AppCompatResources: android.util.TypedValue getTypedValue()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.AppCompatColorStateListInflater: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)" [label="AppCompatColorStateListInflater(createFromXml)",];
    "android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList inflateColorStateList(android.content.Context,int)"->"android.support.v7.content.res.AppCompatColorStateListInflater: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.AppCompatColorStateListInflater: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)" [label="AppCompatColorStateListInflater(createFromXmlInner)",];
    "android.support.v7.content.res.AppCompatColorStateListInflater: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)"->"android.support.v7.content.res.AppCompatColorStateListInflater: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.AppCompatColorStateListInflater: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)" [label="AppCompatColorStateListInflater(inflate)",];
    "android.support.v7.content.res.AppCompatColorStateListInflater: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)"->"android.support.v7.content.res.AppCompatColorStateListInflater: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.AppCompatColorStateListInflater: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])" [label="AppCompatColorStateListInflater(obtainAttributes)",];
    "android.support.v7.content.res.AppCompatColorStateListInflater: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)"->"android.support.v7.content.res.AppCompatColorStateListInflater: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.AppCompatColorStateListInflater: int modulateColorAlpha(int,float)" [label="AppCompatColorStateListInflater(modulateColorAlpha)",];
    "android.support.v7.content.res.AppCompatColorStateListInflater: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)"->"android.support.v7.content.res.AppCompatColorStateListInflater: int modulateColorAlpha(int,float)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.graphics.ColorUtils: int setAlphaComponent(int,int)" [label="ColorUtils(setAlphaComponent)",];
    "android.support.v7.content.res.AppCompatColorStateListInflater: int modulateColorAlpha(int,float)"->"android.support.v4.graphics.ColorUtils: int setAlphaComponent(int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)" [label="GrowingArrayUtils(append)",];
    "android.support.v7.content.res.AppCompatColorStateListInflater: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)"->"android.support.v7.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.GrowingArrayUtils: int growSize(int)" [label="GrowingArrayUtils(growSize)",];
    "android.support.v7.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)"->"android.support.v7.content.res.GrowingArrayUtils: int growSize(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.GrowingArrayUtils: int[] append(int[],int,int)" [label="GrowingArrayUtils(append)",];
    "android.support.v7.content.res.AppCompatColorStateListInflater: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)"->"android.support.v7.content.res.GrowingArrayUtils: int[] append(int[],int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.content.res.GrowingArrayUtils: int[] append(int[],int,int)"->"android.support.v7.content.res.GrowingArrayUtils: int growSize(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)" [label="AppCompatDrawableManager(createColoredButtonColorStateList)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)"->"android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)" [label="AppCompatDrawableManager(createButtonColorStateList)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)"->"android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)"->"android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)" [label="ThemeUtils(getDisabledThemeAttrColor)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)"->"android.support.v7.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.graphics.ColorUtils: int compositeColors(int,int)" [label="ColorUtils(compositeColors)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)"->"android.support.v4.graphics.ColorUtils: int compositeColors(int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.graphics.ColorUtils: int compositeAlpha(int,int)" [label="ColorUtils(compositeAlpha)",];
    "android.support.v4.graphics.ColorUtils: int compositeColors(int,int)"->"android.support.v4.graphics.ColorUtils: int compositeAlpha(int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)" [label="ColorUtils(compositeComponent)",];
    "android.support.v4.graphics.ColorUtils: int compositeColors(int,int)"->"android.support.v4.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.graphics.ColorUtils: int compositeColors(int,int)"->"android.support.v4.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.graphics.ColorUtils: int compositeColors(int,int)"->"android.support.v4.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)"->"android.support.v4.graphics.ColorUtils: int compositeColors(int,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)" [label="AppCompatDrawableManager(addTintListToCache)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)" [label="AppCompatDrawableManager(createBorderlessButtonColorStateList)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)"->"android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)" [label="AppCompatDrawableManager(arrayContains)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)" [label="ThemeUtils(getThemeAttrColorStateList)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)"->"android.support.v7.widget.TintTypedArray: android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)" [label="TintTypedArray(getColorStateList)",];
    "android.support.v7.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)"->"android.support.v7.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)"->"android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)"->"android.support.v7.widget.TintTypedArray: void recycle()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)"->"android.support.v7.widget.TintTypedArray: void recycle()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)" [label="AppCompatDrawableManager(getTintListFromCache)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)" [label="AppCompatDrawableManager(createDefaultButtonColorStateList)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)"->"android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)"->"android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)"->"android.support.v7.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode getTintMode(int)" [label="AppCompatDrawableManager(getTintMode)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode getTintMode(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.AppCompatDrawableManager: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)" [label="AppCompatDrawableManager(tintDrawableUsingColorFilter)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.AppCompatDrawableManager: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)"->"android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)"->"android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)"->"android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)"->"android.support.v7.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)"->"android.support.v7.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)"->"android.support.v7.widget.AppCompatDrawableManager: boolean arrayContains(int[],int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)"->"android.support.v7.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)" [label="AppCompatDrawableManager(loadDrawableFromDelegates)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)"->"android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)" [label="AppCompatDrawableManager(addDrawableToCache)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LongSparseArray: void <init>()" [label="LongSparseArray(<init>)",];
    "android.support.v7.widget.AppCompatDrawableManager: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)"->"android.support.v4.util.LongSparseArray: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LongSparseArray: void <init>(int)" [label="LongSparseArray(<init>)",];
    "android.support.v4.util.LongSparseArray: void <init>()"->"android.support.v4.util.LongSparseArray: void <init>(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.ContainerHelpers: int idealLongArraySize(int)" [label="ContainerHelpers(idealLongArraySize)",];
    "android.support.v4.util.LongSparseArray: void <init>(int)"->"android.support.v4.util.ContainerHelpers: int idealLongArraySize(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LongSparseArray: void put(long,java.lang.Object)" [label="LongSparseArray(put)",];
    "android.support.v7.widget.AppCompatDrawableManager: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)"->"android.support.v4.util.LongSparseArray: void put(long,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LongSparseArray: void put(long,java.lang.Object)"->"android.support.v4.util.ContainerHelpers: int idealLongArraySize(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LongSparseArray: void gc()" [label="LongSparseArray(gc)",];
    "android.support.v4.util.LongSparseArray: void put(long,java.lang.Object)"->"android.support.v4.util.LongSparseArray: void gc()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.ContainerHelpers: int binarySearch(long[],int,long)" [label="ContainerHelpers(binarySearch)",];
    "android.support.v4.util.LongSparseArray: void put(long,java.lang.Object)"->"android.support.v4.util.ContainerHelpers: int binarySearch(long[],int,long)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LongSparseArray: void put(long,java.lang.Object)"->"android.support.v4.util.ContainerHelpers: int binarySearch(long[],int,long)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)"->"android.support.v4.util.SimpleArrayMap: java.lang.Object get(java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager$InflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)" [label="AppCompatDrawableManager$InflateDelegate(createFromXmlInner)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager$InflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)"->"android.support.v4.util.SimpleArrayMap: java.lang.Object get(java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.SimpleArrayMap: boolean isEmpty()" [label="SimpleArrayMap(isEmpty)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)"->"android.support.v4.util.SimpleArrayMap: boolean isEmpty()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)" [label="AppCompatDrawableManager(getCachedDrawable)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LongSparseArray: void delete(long)" [label="LongSparseArray(delete)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)"->"android.support.v4.util.LongSparseArray: void delete(long)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LongSparseArray: void delete(long)"->"android.support.v4.util.ContainerHelpers: int binarySearch(long[],int,long)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LongSparseArray: java.lang.Object get(long)" [label="LongSparseArray(get)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)"->"android.support.v4.util.LongSparseArray: java.lang.Object get(long)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)" [label="LongSparseArray(get)",];
    "android.support.v4.util.LongSparseArray: java.lang.Object get(long)"->"android.support.v4.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v4.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)"->"android.support.v4.util.ContainerHelpers: int binarySearch(long[],int,long)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: long createCacheKey(android.util.TypedValue)" [label="AppCompatDrawableManager(createCacheKey)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: long createCacheKey(android.util.TypedValue)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)" [label="AppCompatDrawableManager(createDrawableIfNeeded)",];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)"->"android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: long createCacheKey(android.util.TypedValue)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)"->"android.support.v7.widget.AppCompatDrawableManager: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegateImplBase: android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback)" [label="AppCompatDelegateImplBase(wrapWindowCallback)",];
    "android.support.v7.app.AppCompatDelegateImplBase: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.app.AppCompatDelegateImplBase: android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase: void <init>(android.support.v7.app.AppCompatDelegateImplBase,android.view.Window$Callback)" [label="AppCompatDelegateImplBase$AppCompatWindowCallbackBase(<init>)",];
    "android.support.v7.app.AppCompatDelegateImplBase: android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback)"->"android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase: void <init>(android.support.v7.app.AppCompatDelegateImplBase,android.view.Window$Callback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.view.WindowCallbackWrapper: void <init>(android.view.Window$Callback)" [label="WindowCallbackWrapper(<init>)",];
    "android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase: void <init>(android.support.v7.app.AppCompatDelegateImplBase,android.view.Window$Callback)"->"android.support.v7.view.WindowCallbackWrapper: void <init>(android.view.Window$Callback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegate: void <init>()" [label="AppCompatDelegate(<init>)",];
    "android.support.v7.app.AppCompatDelegateImplBase: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.app.AppCompatDelegate: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegateImplV9$1: void <init>(android.support.v7.app.AppCompatDelegateImplV9)" [label="AppCompatDelegateImplV9$1(<init>)",];
    "android.support.v7.app.AppCompatDelegateImplV9: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.app.AppCompatDelegateImplV9$1: void <init>(android.support.v7.app.AppCompatDelegateImplV9)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegateImplV23: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="AppCompatDelegateImplV23(<init>)",];
    "android.support.v7.app.AppCompatDelegate: android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.app.AppCompatDelegateImplV23: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegateImplV14: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="AppCompatDelegateImplV14(<init>)",];
    "android.support.v7.app.AppCompatDelegateImplV23: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.app.AppCompatDelegateImplV14: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegateImplV14: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.app.AppCompatDelegateImplV11: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegate: android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.app.AppCompatDelegateImplV14: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegateImplN: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="AppCompatDelegateImplN(<init>)",];
    "android.support.v7.app.AppCompatDelegate: android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.app.AppCompatDelegateImplN: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegateImplN: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.app.AppCompatDelegateImplV23: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegate: android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)"->"android.support.v7.app.AppCompatDelegateImplV9: void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatActivity: void setTheme(int)" [label="AppCompatActivity(setTheme)",];
    "android.support.v7.app.AppCompatActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatActivity: void setTheme(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatActivity: void setContentView(int)" [label="AppCompatActivity(setContentView)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatActivity: void setContentView(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatActivity: void setContentView(int)"->"android.support.v7.app.AppCompatActivity: android.support.v7.app.AppCompatDelegate getDelegate()" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegate: void setContentView(int)" [label="AppCompatDelegate(setContentView)",];
    "android.support.v7.app.AppCompatActivity: void setContentView(int)"->"android.support.v7.app.AppCompatDelegate: void setContentView(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)" [label="AppCompatActivity(findViewById)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatDelegate: android.view.View findViewById(int)" [label="AppCompatDelegate(findViewById)",];
    "android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)"->"android.support.v7.app.AppCompatDelegate: android.view.View findViewById(int)" [label="SIMPLE",style=bold,color=black,];
    "android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)"->"android.support.v7.app.AppCompatActivity: android.support.v7.app.AppCompatDelegate getDelegate()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest build()" [label="AdRequest$Builder(build)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest build()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.AdRequest: void <init>(com.google.android.gms.ads.AdRequest$Builder,com.google.android.gms.ads.AdRequest$1)" [label="AdRequest(<init>)",];
    "com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest build()"->"com.google.android.gms.ads.AdRequest: void <init>(com.google.android.gms.ads.AdRequest$Builder,com.google.android.gms.ads.AdRequest$1)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.AdRequest: void <init>(com.google.android.gms.ads.AdRequest$Builder)" [label="AdRequest(<init>)",];
    "com.google.android.gms.ads.AdRequest: void <init>(com.google.android.gms.ads.AdRequest$Builder,com.google.android.gms.ads.AdRequest$1)"->"com.google.android.gms.ads.AdRequest: void <init>(com.google.android.gms.ads.AdRequest$Builder)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza)" [label="zzfe(<init>)",];
    "com.google.android.gms.ads.AdRequest: void <init>(com.google.android.gms.ads.AdRequest$Builder)"->"com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)" [label="zzfe(<init>)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza)"->"com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: java.util.HashSet zzd(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zzd)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: java.util.HashSet zzd(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: java.util.HashMap zzh(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zzh)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: java.util.HashMap zzh(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: java.util.HashSet zzl(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zzl)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: java.util.HashSet zzl(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: java.util.HashSet zzn(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zzn)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: java.util.HashSet zzn(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: java.lang.String zzi(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zzi)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: java.lang.String zzi(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: java.util.Date zza(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zza)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: java.util.Date zza(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: int zzc(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zzc)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: int zzc(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: boolean zzo(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zzo)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: boolean zzo(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: boolean zzf(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zzf)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: boolean zzf(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: android.location.Location zze(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zze)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: android.location.Location zze(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: android.os.Bundle zzm(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zzm)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: android.os.Bundle zzm(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: int zzk(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zzk)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: int zzk(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: java.lang.String zzj(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zzj)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: java.lang.String zzj(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: android.os.Bundle zzg(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zzg)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: android.os.Bundle zzg(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: java.lang.String zzb(com.google.android.gms.internal.zzfe$zza)" [label="zzfe$zza(zzb)",];
    "com.google.android.gms.internal.zzfe: void <init>(com.google.android.gms.internal.zzfe$zza,com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.internal.zzfe$zza: java.lang.String zzb(com.google.android.gms.internal.zzfe$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.internal.zzfe$zza zza(com.google.android.gms.ads.AdRequest$Builder)" [label="AdRequest$Builder(zza)",];
    "com.google.android.gms.ads.AdRequest: void <init>(com.google.android.gms.ads.AdRequest$Builder)"->"com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.internal.zzfe$zza zza(com.google.android.gms.ads.AdRequest$Builder)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.InterstitialAd: void <init>(android.content.Context)" [label="InterstitialAd(<init>)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.google.android.gms.ads.InterstitialAd: void <init>(android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void <init>(android.content.Context)" [label="zzfg(<init>)",];
    "com.google.android.gms.ads.InterstitialAd: void <init>(android.content.Context)"->"com.google.android.gms.internal.zzfg: void <init>(android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void <init>(android.content.Context,com.google.android.gms.internal.zzef,com.google.android.gms.ads.doubleclick.PublisherInterstitialAd)" [label="zzfg(<init>)",];
    "com.google.android.gms.internal.zzfg: void <init>(android.content.Context)"->"com.google.android.gms.internal.zzfg: void <init>(android.content.Context,com.google.android.gms.internal.zzef,com.google.android.gms.ads.doubleclick.PublisherInterstitialAd)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzjz: void <init>()" [label="zzjz(<init>)",];
    "com.google.android.gms.internal.zzfg: void <init>(android.content.Context,com.google.android.gms.internal.zzef,com.google.android.gms.ads.doubleclick.PublisherInterstitialAd)"->"com.google.android.gms.internal.zzjz: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzka$zza: void <init>()" [label="zzka$zza(<init>)",];
    "com.google.android.gms.internal.zzjz: void <init>()"->"com.google.android.gms.internal.zzka$zza: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzef zzeD()" [label="zzef(zzeD)",];
    "com.google.android.gms.internal.zzfg: void <init>(android.content.Context)"->"com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzef zzeD()" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$1: void <init>(com.jpstudiosonline.tipcalculator.MainActivity)" [label="MainActivity$1(<init>)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.jpstudiosonline.tipcalculator.MainActivity$1: void <init>(com.jpstudiosonline.tipcalculator.MainActivity)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.AdListener: void <init>()" [label="AdListener(<init>)",];
    "com.jpstudiosonline.tipcalculator.MainActivity$1: void <init>(com.jpstudiosonline.tipcalculator.MainActivity)"->"com.google.android.gms.ads.AdListener: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.AdView: void loadAd(com.google.android.gms.ads.AdRequest)" [label="AdView(loadAd)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.google.android.gms.ads.AdView: void loadAd(com.google.android.gms.ads.AdRequest)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.BaseAdView: void loadAd(com.google.android.gms.ads.AdRequest)" [label="BaseAdView(loadAd)",];
    "com.google.android.gms.ads.AdView: void loadAd(com.google.android.gms.ads.AdRequest)"->"com.google.android.gms.ads.BaseAdView: void loadAd(com.google.android.gms.ads.AdRequest)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzff: void zza(com.google.android.gms.internal.zzfe)" [label="zzff(zza)",];
    "com.google.android.gms.ads.BaseAdView: void loadAd(com.google.android.gms.ads.AdRequest)"->"com.google.android.gms.internal.zzff: void zza(com.google.android.gms.internal.zzfe)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzqf: void zzc(java.lang.String,java.lang.Throwable)" [label="zzqf(zzc)",];
    "com.google.android.gms.internal.zzff: void zza(com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzqf: void zzc(java.lang.String,java.lang.Throwable)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzqf: boolean zzak(int)" [label="zzqf(zzak)",];
    "com.google.android.gms.internal.zzqf: void zzc(java.lang.String,java.lang.Throwable)"->"com.google.android.gms.internal.zzqf: boolean zzak(int)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzff: void zzfi()" [label="zzff(zzfi)",];
    "com.google.android.gms.internal.zzff: void zza(com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzff: void zzfi()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzeo)" [label="zzet(zza)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzeo)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzgq: void <init>(com.google.android.gms.ads.doubleclick.OnCustomRenderedAdLoadedListener)" [label="zzgq(<init>)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzgq: void <init>(com.google.android.gms.ads.doubleclick.OnCustomRenderedAdLoadedListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzgp$zza: void <init>()" [label="zzgp$zza(<init>)",];
    "com.google.android.gms.internal.zzgq: void <init>(com.google.android.gms.ads.doubleclick.OnCustomRenderedAdLoadedListener)"->"com.google.android.gms.internal.zzgp$zza: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzle)" [label="zzet(zza)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzle)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzft)" [label="zzet(zza)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzft)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzei: void <init>(com.google.android.gms.ads.doubleclick.AppEventListener)" [label="zzei(<init>)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzei: void <init>(com.google.android.gms.ads.doubleclick.AppEventListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzev$zza: void <init>()" [label="zzev$zza(<init>)",];
    "com.google.android.gms.internal.zzei: void <init>(com.google.android.gms.ads.doubleclick.AppEventListener)"->"com.google.android.gms.internal.zzev$zza: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzff: com.google.android.gms.internal.zzet zzfj()" [label="zzff(zzfj)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzff: com.google.android.gms.internal.zzet zzfj()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzff: com.google.android.gms.internal.zzeg zza(android.content.Context,com.google.android.gms.ads.AdSize[],int)" [label="zzff(zza)",];
    "com.google.android.gms.internal.zzff: com.google.android.gms.internal.zzet zzfj()"->"com.google.android.gms.internal.zzff: com.google.android.gms.internal.zzeg zza(android.content.Context,com.google.android.gms.ads.AdSize[],int)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzff: boolean zzz(int)" [label="zzff(zzz)",];
    "com.google.android.gms.internal.zzff: com.google.android.gms.internal.zzeg zza(android.content.Context,com.google.android.gms.ads.AdSize[],int)"->"com.google.android.gms.internal.zzff: boolean zzz(int)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])" [label="zzeg(<init>)",];
    "com.google.android.gms.internal.zzff: com.google.android.gms.internal.zzeg zza(android.content.Context,com.google.android.gms.ads.AdSize[],int)"->"com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.AdSize: int getHeight()" [label="AdSize(getHeight)",];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.ads.AdSize: int getHeight()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzqe: boolean zzai(android.content.Context)" [label="zzqe(zzai)",];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.internal.zzqe: boolean zzai(android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.common.util.zzt: boolean zzzj()" [label="zzt(zzzj)",];
    "com.google.android.gms.internal.zzqe: boolean zzai(android.content.Context)"->"com.google.android.gms.common.util.zzt: boolean zzzj()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzqe: int zza(android.util.DisplayMetrics,int)" [label="zzqe(zza)",];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.internal.zzqe: int zza(android.util.DisplayMetrics,int)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: int zzc(android.util.DisplayMetrics)" [label="zzeg(zzc)",];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.internal.zzeg: int zzc(android.util.DisplayMetrics)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzel: com.google.android.gms.internal.zzqe zzeT()" [label="zzel(zzeT)",];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.internal.zzel: com.google.android.gms.internal.zzqe zzeT()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.AdSize: boolean isFluid()" [label="AdSize(isFluid)",];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.ads.AdSize: boolean isFluid()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.AdSize: int getWidth()" [label="AdSize(getWidth)",];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.ads.AdSize: int getWidth()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzqe: boolean zzah(android.content.Context)" [label="zzqe(zzah)",];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.internal.zzqe: boolean zzah(android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.internal.zzqe: int zza(android.util.DisplayMetrics,int)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.common.internal.safeparcel.zza: void <init>()" [label="zza(<init>)",];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.common.internal.safeparcel.zza: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.internal.zzel: com.google.android.gms.internal.zzqe zzeT()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: int zza(android.util.DisplayMetrics)" [label="zzeg(zza)",];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.internal.zzeg: int zza(android.util.DisplayMetrics)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize)" [label="zzeg(<init>)",];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize)"->"com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.ads.AdSize: int getHeight()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.internal.zzel: com.google.android.gms.internal.zzqe zzeT()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.AdSize: java.lang.String toString()" [label="AdSize(toString)",];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.ads.AdSize: java.lang.String toString()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.ads.AdSize: int getWidth()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.internal.zzel: com.google.android.gms.internal.zzqe zzeT()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.internal.zzel: com.google.android.gms.internal.zzqe zzeT()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzqe: int zzaj(android.content.Context)" [label="zzqe(zzaj)",];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.internal.zzqe: int zzaj(android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>(android.content.Context,com.google.android.gms.ads.AdSize[])"->"com.google.android.gms.internal.zzeg: int zza(android.util.DisplayMetrics)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void zzl(boolean)" [label="zzeg(zzl)",];
    "com.google.android.gms.internal.zzff: com.google.android.gms.internal.zzeg zza(android.content.Context,com.google.android.gms.ads.AdSize[],int)"->"com.google.android.gms.internal.zzeg: void zzl(boolean)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzel: com.google.android.gms.internal.zzek zzeU()" [label="zzel(zzeU)",];
    "com.google.android.gms.internal.zzff: com.google.android.gms.internal.zzet zzfj()"->"com.google.android.gms.internal.zzel: com.google.android.gms.internal.zzek zzeU()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzff: boolean zzb(com.google.android.gms.internal.zzeg)" [label="zzff(zzb)",];
    "com.google.android.gms.internal.zzff: com.google.android.gms.internal.zzet zzfj()"->"com.google.android.gms.internal.zzff: boolean zzb(com.google.android.gms.internal.zzeg)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzet zza(android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String,com.google.android.gms.internal.zzka)" [label="zzek(zza)",];
    "com.google.android.gms.internal.zzff: com.google.android.gms.internal.zzet zzfj()"->"com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzet zza(android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String,com.google.android.gms.internal.zzka)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek$1: void <init>(com.google.android.gms.internal.zzek,android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String,com.google.android.gms.internal.zzka)" [label="zzek$1(<init>)",];
    "com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzet zza(android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String,com.google.android.gms.internal.zzka)"->"com.google.android.gms.internal.zzek$1: void <init>(com.google.android.gms.internal.zzek,android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String,com.google.android.gms.internal.zzka)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek$zza: void <init>(com.google.android.gms.internal.zzek)" [label="zzek$zza(<init>)",];
    "com.google.android.gms.internal.zzek$1: void <init>(com.google.android.gms.internal.zzek,android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String,com.google.android.gms.internal.zzka)"->"com.google.android.gms.internal.zzek$zza: void <init>(com.google.android.gms.internal.zzek)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek: java.lang.Object zza(android.content.Context,boolean,com.google.android.gms.internal.zzek$zza)" [label="zzek(zza)",];
    "com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzet zza(android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String,com.google.android.gms.internal.zzka)"->"com.google.android.gms.internal.zzek: java.lang.Object zza(android.content.Context,boolean,com.google.android.gms.internal.zzek$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzet zza(android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String)" [label="zzek(zza)",];
    "com.google.android.gms.internal.zzff: com.google.android.gms.internal.zzet zzfj()"->"com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzet zza(android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek$2: void <init>(com.google.android.gms.internal.zzek,android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String)" [label="zzek$2(<init>)",];
    "com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzet zza(android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String)"->"com.google.android.gms.internal.zzek$2: void <init>(com.google.android.gms.internal.zzek,android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek$2: void <init>(com.google.android.gms.internal.zzek,android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String)"->"com.google.android.gms.internal.zzek$zza: void <init>(com.google.android.gms.internal.zzek)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzet zza(android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String)"->"com.google.android.gms.internal.zzek: java.lang.Object zza(android.content.Context,boolean,com.google.android.gms.internal.zzek$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzff: com.google.android.gms.internal.zzet zzfj()"->"com.google.android.gms.internal.zzel: com.google.android.gms.internal.zzek zzeU()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzdz: void <init>(com.google.android.gms.ads.AdListener)" [label="zzdz(<init>)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzdz: void <init>(com.google.android.gms.ads.AdListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzli,java.lang.String)" [label="zzet(zza)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzli,java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzet: void setManualImpressionsEnabled(boolean)" [label="zzet(setManualImpressionsEnabled)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzet: void setManualImpressionsEnabled(boolean)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzev)" [label="zzet(zza)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzev)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzex)" [label="zzet(zza)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzex)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzep)" [label="zzet(zza)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzep)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzft: void <init>(com.google.android.gms.ads.VideoOptions)" [label="zzft(<init>)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzft: void <init>(com.google.android.gms.ads.VideoOptions)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzft: void <init>(boolean)" [label="zzft(<init>)",];
    "com.google.android.gms.internal.zzft: void <init>(com.google.android.gms.ads.VideoOptions)"->"com.google.android.gms.internal.zzft: void <init>(boolean)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzft: void <init>(boolean)"->"com.google.android.gms.common.internal.safeparcel.zza: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.VideoOptions: boolean getStartMuted()" [label="VideoOptions(getStartMuted)",];
    "com.google.android.gms.internal.zzft: void <init>(com.google.android.gms.ads.VideoOptions)"->"com.google.android.gms.ads.VideoOptions: boolean getStartMuted()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzdy: void <init>(com.google.android.gms.internal.zzdx)" [label="zzdy(<init>)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzdy: void <init>(com.google.android.gms.internal.zzdx)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzln: void <init>(com.google.android.gms.ads.purchase.PlayStorePurchaseListener)" [label="zzln(<init>)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzln: void <init>(com.google.android.gms.ads.purchase.PlayStorePurchaseListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzli$zza: void <init>()" [label="zzli$zza(<init>)",];
    "com.google.android.gms.internal.zzln: void <init>(com.google.android.gms.ads.purchase.PlayStorePurchaseListener)"->"com.google.android.gms.internal.zzli$zza: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.Correlator: com.google.android.gms.internal.zzem zzbq()" [label="Correlator(zzbq)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.ads.Correlator: com.google.android.gms.internal.zzem zzbq()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzlj: void <init>(com.google.android.gms.ads.purchase.InAppPurchaseListener)" [label="zzlj(<init>)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzlj: void <init>(com.google.android.gms.ads.purchase.InAppPurchaseListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzle$zza: void <init>()" [label="zzle$zza(<init>)",];
    "com.google.android.gms.internal.zzlj: void <init>(com.google.android.gms.ads.purchase.InAppPurchaseListener)"->"com.google.android.gms.internal.zzle$zza: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzgp)" [label="zzet(zza)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzgp)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzff: void zzfh()" [label="zzff(zzfh)",];
    "com.google.android.gms.internal.zzff: void zzfi()"->"com.google.android.gms.internal.zzff: void zzfh()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzet: com.google.android.gms.dynamic.IObjectWrapper zzbB()" [label="zzet(zzbB)",];
    "com.google.android.gms.internal.zzff: void zzfh()"->"com.google.android.gms.internal.zzet: com.google.android.gms.dynamic.IObjectWrapper zzbB()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.dynamic.zzd: java.lang.Object zzF(com.google.android.gms.dynamic.IObjectWrapper)" [label="zzd(zzF)",];
    "com.google.android.gms.internal.zzff: void zzfh()"->"com.google.android.gms.dynamic.zzd: java.lang.Object zzF(com.google.android.gms.dynamic.IObjectWrapper)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzff: void zzfh()"->"com.google.android.gms.internal.zzqf: void zzc(java.lang.String,java.lang.Throwable)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)" [label="zzef(zza)",];
    "com.google.android.gms.internal.zzff: void zza(com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: java.util.Set zzfg()" [label="zzfe(zzfg)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: java.util.Set zzfg()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: java.util.Date getBirthday()" [label="zzfe(getBirthday)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: java.util.Date getBirthday()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: boolean getManualImpressionsEnabled()" [label="zzfe(getManualImpressionsEnabled)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: boolean getManualImpressionsEnabled()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: java.lang.String getPublisherProvidedId()" [label="zzfe(getPublisherProvidedId)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: java.lang.String getPublisherProvidedId()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: android.os.Bundle getNetworkExtrasBundle(java.lang.Class)" [label="zzfe(getNetworkExtrasBundle)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: android.os.Bundle getNetworkExtrasBundle(java.lang.Class)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzqe: java.lang.String zza(java.lang.StackTraceElement[],java.lang.String)" [label="zzqe(zza)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzqe: java.lang.String zza(java.lang.StackTraceElement[],java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzqe: java.lang.String zzb(java.lang.String,java.lang.String,int)" [label="zzqe(zzb)",];
    "com.google.android.gms.internal.zzqe: java.lang.String zza(java.lang.StackTraceElement[],java.lang.String)"->"com.google.android.gms.internal.zzqe: java.lang.String zzb(java.lang.String,java.lang.String,int)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: android.os.Bundle zzfe()" [label="zzfe(zzfe)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: android.os.Bundle zzfe()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: android.location.Location getLocation()" [label="zzfe(getLocation)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: android.location.Location getLocation()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: boolean isTestDevice(android.content.Context)" [label="zzfe(isTestDevice)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: boolean isTestDevice(android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzqe: java.lang.String zzad(android.content.Context)" [label="zzqe(zzad)",];
    "com.google.android.gms.internal.zzfe: boolean isTestDevice(android.content.Context)"->"com.google.android.gms.internal.zzqe: java.lang.String zzad(android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzqe: java.lang.String zzbe(java.lang.String)" [label="zzqe(zzbe)",];
    "com.google.android.gms.internal.zzqe: java.lang.String zzad(android.content.Context)"->"com.google.android.gms.internal.zzqe: java.lang.String zzbe(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzqe: boolean zzli()" [label="zzqe(zzli)",];
    "com.google.android.gms.internal.zzqe: java.lang.String zzad(android.content.Context)"->"com.google.android.gms.internal.zzqe: boolean zzli()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: boolean isTestDevice(android.content.Context)"->"com.google.android.gms.internal.zzel: com.google.android.gms.internal.zzqe zzeT()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: java.lang.String zzfb()" [label="zzfe(zzfb)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: java.lang.String zzfb()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)" [label="zzfp(<init>)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.search.SearchAdRequest: int getBackgroundGradientBottom()" [label="SearchAdRequest(getBackgroundGradientBottom)",];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.ads.search.SearchAdRequest: int getBackgroundGradientBottom()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.search.SearchAdRequest: java.lang.String getFontFace()" [label="SearchAdRequest(getFontFace)",];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.ads.search.SearchAdRequest: java.lang.String getFontFace()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.search.SearchAdRequest: int getHeaderTextSize()" [label="SearchAdRequest(getHeaderTextSize)",];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.ads.search.SearchAdRequest: int getHeaderTextSize()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.common.internal.safeparcel.zza: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.search.SearchAdRequest: int getBackgroundColor()" [label="SearchAdRequest(getBackgroundColor)",];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.ads.search.SearchAdRequest: int getBackgroundColor()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.search.SearchAdRequest: int getBorderThickness()" [label="SearchAdRequest(getBorderThickness)",];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.ads.search.SearchAdRequest: int getBorderThickness()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.search.SearchAdRequest: int getDescriptionTextColor()" [label="SearchAdRequest(getDescriptionTextColor)",];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.ads.search.SearchAdRequest: int getDescriptionTextColor()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.search.SearchAdRequest: int getBackgroundGradientTop()" [label="SearchAdRequest(getBackgroundGradientTop)",];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.ads.search.SearchAdRequest: int getBackgroundGradientTop()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.search.SearchAdRequest: int getHeaderTextColor()" [label="SearchAdRequest(getHeaderTextColor)",];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.ads.search.SearchAdRequest: int getHeaderTextColor()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.search.SearchAdRequest: int getBorderColor()" [label="SearchAdRequest(getBorderColor)",];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.ads.search.SearchAdRequest: int getBorderColor()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.search.SearchAdRequest: int getBorderType()" [label="SearchAdRequest(getBorderType)",];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.ads.search.SearchAdRequest: int getBorderType()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.search.SearchAdRequest: int getCallButtonColor()" [label="SearchAdRequest(getCallButtonColor)",];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.ads.search.SearchAdRequest: int getCallButtonColor()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.search.SearchAdRequest: java.lang.String getQuery()" [label="SearchAdRequest(getQuery)",];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.ads.search.SearchAdRequest: java.lang.String getQuery()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.search.SearchAdRequest: int getAnchorTextColor()" [label="SearchAdRequest(getAnchorTextColor)",];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.ads.search.SearchAdRequest: int getAnchorTextColor()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.search.SearchAdRequest: java.lang.String getCustomChannels()" [label="SearchAdRequest(getCustomChannels)",];
    "com.google.android.gms.internal.zzfp: void <init>(com.google.android.gms.ads.search.SearchAdRequest)"->"com.google.android.gms.ads.search.SearchAdRequest: java.lang.String getCustomChannels()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: java.lang.String getContentUrl()" [label="zzfe(getContentUrl)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: java.lang.String getContentUrl()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzel: com.google.android.gms.internal.zzqe zzeT()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: int zzff()" [label="zzfe(zzff)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: int zzff()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: com.google.android.gms.ads.search.SearchAdRequest zzfc()" [label="zzfe(zzfc)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: com.google.android.gms.ads.search.SearchAdRequest zzfc()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: int getGender()" [label="zzfe(getGender)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: int getGender()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: android.os.Bundle getCustomTargeting()" [label="zzfe(getCustomTargeting)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: android.os.Bundle getCustomTargeting()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: boolean isDesignedForFamilies()" [label="zzfe(isDesignedForFamilies)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: boolean isDesignedForFamilies()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzec: void <init>(int,long,android.os.Bundle,int,java.util.List,boolean,int,boolean,java.lang.String,com.google.android.gms.internal.zzfp,android.location.Location,java.lang.String,android.os.Bundle,android.os.Bundle,java.util.List,java.lang.String,java.lang.String,boolean)" [label="zzec(<init>)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzec: void <init>(int,long,android.os.Bundle,int,java.util.List,boolean,int,boolean,java.lang.String,com.google.android.gms.internal.zzfp,android.location.Location,java.lang.String,android.os.Bundle,android.os.Bundle,java.util.List,java.lang.String,java.lang.String,boolean)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzec: void <init>(int,long,android.os.Bundle,int,java.util.List,boolean,int,boolean,java.lang.String,com.google.android.gms.internal.zzfp,android.location.Location,java.lang.String,android.os.Bundle,android.os.Bundle,java.util.List,java.lang.String,java.lang.String,boolean)"->"com.google.android.gms.common.internal.safeparcel.zza: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: java.util.Set getKeywords()" [label="zzfe(getKeywords)",];
    "com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: java.util.Set getKeywords()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzjz: void zzi(java.util.Map)" [label="zzjz(zzi)",];
    "com.google.android.gms.internal.zzff: void zza(com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzjz: void zzi(java.util.Map)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzet: boolean zzb(com.google.android.gms.internal.zzec)" [label="zzet(zzb)",];
    "com.google.android.gms.internal.zzff: void zza(com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzet: boolean zzb(com.google.android.gms.internal.zzec)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe: java.util.Map zzfd()" [label="zzfe(zzfd)",];
    "com.google.android.gms.internal.zzff: void zza(com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: java.util.Map zzfd()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.AdRequest: com.google.android.gms.internal.zzfe zzbp()" [label="AdRequest(zzbp)",];
    "com.google.android.gms.ads.BaseAdView: void loadAd(com.google.android.gms.ads.AdRequest)"->"com.google.android.gms.ads.AdRequest: com.google.android.gms.internal.zzfe zzbp()" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$5: void <init>(com.jpstudiosonline.tipcalculator.MainActivity)" [label="MainActivity$5(<init>)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.jpstudiosonline.tipcalculator.MainActivity$5: void <init>(com.jpstudiosonline.tipcalculator.MainActivity)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$4: void <init>(com.jpstudiosonline.tipcalculator.MainActivity)" [label="MainActivity$4(<init>)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.jpstudiosonline.tipcalculator.MainActivity$4: void <init>(com.jpstudiosonline.tipcalculator.MainActivity)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$4: void <init>(com.jpstudiosonline.tipcalculator.MainActivity)"->"com.google.android.gms.ads.AdListener: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest build()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.AdView: void setAdListener(com.google.android.gms.ads.AdListener)" [label="AdView(setAdListener)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.google.android.gms.ads.AdView: void setAdListener(com.google.android.gms.ads.AdListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.BaseAdView: void setAdListener(com.google.android.gms.ads.AdListener)" [label="BaseAdView(setAdListener)",];
    "com.google.android.gms.ads.AdView: void setAdListener(com.google.android.gms.ads.AdListener)"->"com.google.android.gms.ads.BaseAdView: void setAdListener(com.google.android.gms.ads.AdListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzff: void zza(com.google.android.gms.internal.zzdx)" [label="zzff(zza)",];
    "com.google.android.gms.ads.BaseAdView: void setAdListener(com.google.android.gms.ads.AdListener)"->"com.google.android.gms.internal.zzff: void zza(com.google.android.gms.internal.zzdx)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzff: void zza(com.google.android.gms.internal.zzdx)"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzeo)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzff: void zza(com.google.android.gms.internal.zzdx)"->"com.google.android.gms.internal.zzdy: void <init>(com.google.android.gms.internal.zzdx)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzff: void zza(com.google.android.gms.internal.zzdx)"->"com.google.android.gms.internal.zzqf: void zzc(java.lang.String,java.lang.Throwable)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.BaseAdView: void setAdListener(com.google.android.gms.ads.AdListener)"->"com.google.android.gms.internal.zzff: void zza(com.google.android.gms.internal.zzdx)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzff: void setAdListener(com.google.android.gms.ads.AdListener)" [label="zzff(setAdListener)",];
    "com.google.android.gms.ads.BaseAdView: void setAdListener(com.google.android.gms.ads.AdListener)"->"com.google.android.gms.internal.zzff: void setAdListener(com.google.android.gms.ads.AdListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzen: void zza(com.google.android.gms.ads.AdListener)" [label="zzen(zza)",];
    "com.google.android.gms.internal.zzff: void setAdListener(com.google.android.gms.ads.AdListener)"->"com.google.android.gms.internal.zzen: void zza(com.google.android.gms.ads.AdListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.AdRequest$Builder: void <init>()" [label="AdRequest$Builder(<init>)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.google.android.gms.ads.AdRequest$Builder: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: void zzM(java.lang.String)" [label="zzfe$zza(zzM)",];
    "com.google.android.gms.ads.AdRequest$Builder: void <init>()"->"com.google.android.gms.internal.zzfe$zza: void zzM(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfe$zza: void <init>()" [label="zzfe$zza(<init>)",];
    "com.google.android.gms.ads.AdRequest$Builder: void <init>()"->"com.google.android.gms.internal.zzfe$zza: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void calculateTip()" [label="MainActivity(calculateTip)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.jpstudiosonline.tipcalculator.MainActivity: void calculateTip()" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$2: void <init>(com.jpstudiosonline.tipcalculator.MainActivity)" [label="MainActivity$2(<init>)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.jpstudiosonline.tipcalculator.MainActivity$2: void <init>(com.jpstudiosonline.tipcalculator.MainActivity)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$2: void <init>(com.jpstudiosonline.tipcalculator.MainActivity)"->"com.google.android.gms.ads.AdListener: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.MobileAds: void initialize(android.content.Context,java.lang.String)" [label="MobileAds(initialize)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.google.android.gms.ads.MobileAds: void initialize(android.content.Context,java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.MobileAds: void initialize(android.content.Context,java.lang.String,com.google.android.gms.ads.MobileAds$Settings)" [label="MobileAds(initialize)",];
    "com.google.android.gms.ads.MobileAds: void initialize(android.content.Context,java.lang.String)"->"com.google.android.gms.ads.MobileAds: void initialize(android.content.Context,java.lang.String,com.google.android.gms.ads.MobileAds$Settings)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfh: void zza(android.content.Context,java.lang.String,com.google.android.gms.internal.zzfi)" [label="zzfh(zza)",];
    "com.google.android.gms.ads.MobileAds: void initialize(android.content.Context,java.lang.String,com.google.android.gms.ads.MobileAds$Settings)"->"com.google.android.gms.internal.zzfh: void zza(android.content.Context,java.lang.String,com.google.android.gms.internal.zzfi)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzey: void initialize()" [label="zzey(initialize)",];
    "com.google.android.gms.internal.zzfh: void zza(android.content.Context,java.lang.String,com.google.android.gms.internal.zzfi)"->"com.google.android.gms.internal.zzey: void initialize()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.dynamic.zzd: com.google.android.gms.dynamic.IObjectWrapper zzA(java.lang.Object)" [label="zzd(zzA)",];
    "com.google.android.gms.internal.zzfh: void zza(android.content.Context,java.lang.String,com.google.android.gms.internal.zzfi)"->"com.google.android.gms.dynamic.zzd: com.google.android.gms.dynamic.IObjectWrapper zzA(java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.dynamic.zzd: void <init>(java.lang.Object)" [label="zzd(<init>)",];
    "com.google.android.gms.dynamic.zzd: com.google.android.gms.dynamic.IObjectWrapper zzA(java.lang.Object)"->"com.google.android.gms.dynamic.zzd: void <init>(java.lang.Object)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.dynamic.IObjectWrapper$zza: void <init>()" [label="IObjectWrapper$zza(<init>)",];
    "com.google.android.gms.dynamic.zzd: void <init>(java.lang.Object)"->"com.google.android.gms.dynamic.IObjectWrapper$zza: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzey: void zzc(java.lang.String,com.google.android.gms.dynamic.IObjectWrapper)" [label="zzey(zzc)",];
    "com.google.android.gms.internal.zzfh: void zza(android.content.Context,java.lang.String,com.google.android.gms.internal.zzfi)"->"com.google.android.gms.internal.zzey: void zzc(java.lang.String,com.google.android.gms.dynamic.IObjectWrapper)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfh: void zza(android.content.Context,java.lang.String,com.google.android.gms.internal.zzfi)"->"com.google.android.gms.internal.zzqf: void zzc(java.lang.String,java.lang.Throwable)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfh: void zza(android.content.Context,java.lang.String,com.google.android.gms.internal.zzfi)"->"com.google.android.gms.internal.zzel: com.google.android.gms.internal.zzek zzeU()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfh$1: void <init>(com.google.android.gms.internal.zzfh,android.content.Context)" [label="zzfh$1(<init>)",];
    "com.google.android.gms.internal.zzfh: void zza(android.content.Context,java.lang.String,com.google.android.gms.internal.zzfi)"->"com.google.android.gms.internal.zzfh$1: void <init>(com.google.android.gms.internal.zzfh,android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzey zzl(android.content.Context)" [label="zzek(zzl)",];
    "com.google.android.gms.internal.zzfh: void zza(android.content.Context,java.lang.String,com.google.android.gms.internal.zzfi)"->"com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzey zzl(android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzey zzl(android.content.Context)"->"com.google.android.gms.internal.zzek: java.lang.Object zza(android.content.Context,boolean,com.google.android.gms.internal.zzek$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek$5: void <init>(com.google.android.gms.internal.zzek,android.content.Context)" [label="zzek$5(<init>)",];
    "com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzey zzl(android.content.Context)"->"com.google.android.gms.internal.zzek$5: void <init>(com.google.android.gms.internal.zzek,android.content.Context)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek$5: void <init>(com.google.android.gms.internal.zzek,android.content.Context)"->"com.google.android.gms.internal.zzek$zza: void <init>(com.google.android.gms.internal.zzek)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.MobileAds$Settings: com.google.android.gms.internal.zzfi zzbr()" [label="MobileAds$Settings(zzbr)",];
    "com.google.android.gms.ads.MobileAds: void initialize(android.content.Context,java.lang.String,com.google.android.gms.ads.MobileAds$Settings)"->"com.google.android.gms.ads.MobileAds$Settings: com.google.android.gms.internal.zzfi zzbr()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfh: com.google.android.gms.internal.zzfh zzfk()" [label="zzfh(zzfk)",];
    "com.google.android.gms.ads.MobileAds: void initialize(android.content.Context,java.lang.String,com.google.android.gms.ads.MobileAds$Settings)"->"com.google.android.gms.internal.zzfh: com.google.android.gms.internal.zzfh zzfk()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfh: void <init>()" [label="zzfh(<init>)",];
    "com.google.android.gms.internal.zzfh: com.google.android.gms.internal.zzfh zzfk()"->"com.google.android.gms.internal.zzfh: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$3: void <init>(com.jpstudiosonline.tipcalculator.MainActivity)" [label="MainActivity$3(<init>)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.jpstudiosonline.tipcalculator.MainActivity$3: void <init>(com.jpstudiosonline.tipcalculator.MainActivity)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.google.android.gms.ads.AdRequest$Builder: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$3: void onClick(android.view.View)" [label="MainActivity$3(onClick)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.jpstudiosonline.tipcalculator.MainActivity$3: void onClick(android.view.View)" [label="GUI (2131165216)",style=bold,color=firebrick,];
    "com.jpstudiosonline.tipcalculator.MainActivity$3: void onClick(android.view.View)"->"com.google.android.gms.ads.AdRequest$Builder: com.google.android.gms.ads.AdRequest build()" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$3: void onClick(android.view.View)"->"com.google.android.gms.ads.AdRequest$Builder: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.InterstitialAd: void loadAd(com.google.android.gms.ads.AdRequest)" [label="InterstitialAd(loadAd)",];
    "com.jpstudiosonline.tipcalculator.MainActivity$3: void onClick(android.view.View)"->"com.google.android.gms.ads.InterstitialAd: void loadAd(com.google.android.gms.ads.AdRequest)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zza(com.google.android.gms.internal.zzfe)" [label="zzfg(zza)",];
    "com.google.android.gms.ads.InterstitialAd: void loadAd(com.google.android.gms.ads.AdRequest)"->"com.google.android.gms.internal.zzfg: void zza(com.google.android.gms.internal.zzfe)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zza(com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfe: java.util.Map zzfd()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zza(com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzjz: void zzi(java.util.Map)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zza(com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzqf: void zzc(java.lang.String,java.lang.Throwable)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)" [label="zzfg(zzS)",];
    "com.google.android.gms.internal.zzfg: void zza(com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzfg: void zzS(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzex)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzeo)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzei: void <init>(com.google.android.gms.ads.doubleclick.AppEventListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzev)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zznz: void <init>(com.google.android.gms.ads.reward.RewardedVideoAdListener)" [label="zznz(<init>)",];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zznz: void <init>(com.google.android.gms.ads.reward.RewardedVideoAdListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zznw$zza: void <init>()" [label="zznw$zza(<init>)",];
    "com.google.android.gms.internal.zznz: void <init>(com.google.android.gms.ads.reward.RewardedVideoAdListener)"->"com.google.android.gms.internal.zznw$zza: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzel: com.google.android.gms.internal.zzek zzeU()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: com.google.android.gms.internal.zzeg zzeE()" [label="zzeg(zzeE)",];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzeg: com.google.android.gms.internal.zzeg zzeE()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>(java.lang.String,int,int,boolean,int,int,com.google.android.gms.internal.zzeg[],boolean,boolean,boolean)" [label="zzeg(<init>)",];
    "com.google.android.gms.internal.zzeg: com.google.android.gms.internal.zzeg zzeE()"->"com.google.android.gms.internal.zzeg: void <init>(java.lang.String,int,int,boolean,int,int,com.google.android.gms.internal.zzeg[],boolean,boolean,boolean)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>(java.lang.String,int,int,boolean,int,int,com.google.android.gms.internal.zzeg[],boolean,boolean,boolean)"->"com.google.android.gms.common.internal.safeparcel.zza: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzlj: void <init>(com.google.android.gms.ads.purchase.InAppPurchaseListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zznw)" [label="zzet(zza)",];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zznw)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzle)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzgq: void <init>(com.google.android.gms.ads.doubleclick.OnCustomRenderedAdLoadedListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>()" [label="zzeg(<init>)",];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzeg: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzeg: void <init>()"->"com.google.android.gms.internal.zzeg: void <init>(java.lang.String,int,int,boolean,int,int,com.google.android.gms.internal.zzeg[],boolean,boolean,boolean)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzln: void <init>(com.google.android.gms.ads.purchase.PlayStorePurchaseListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzet zzb(android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String,com.google.android.gms.internal.zzka)" [label="zzek(zzb)",];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzet zzb(android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String,com.google.android.gms.internal.zzka)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzet zzb(android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String,com.google.android.gms.internal.zzka)"->"com.google.android.gms.internal.zzek: java.lang.Object zza(android.content.Context,boolean,com.google.android.gms.internal.zzek$zza)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek$3: void <init>(com.google.android.gms.internal.zzek,android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String,com.google.android.gms.internal.zzka)" [label="zzek$3(<init>)",];
    "com.google.android.gms.internal.zzek: com.google.android.gms.internal.zzet zzb(android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String,com.google.android.gms.internal.zzka)"->"com.google.android.gms.internal.zzek$3: void <init>(com.google.android.gms.internal.zzek,android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String,com.google.android.gms.internal.zzka)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzek$3: void <init>(com.google.android.gms.internal.zzek,android.content.Context,com.google.android.gms.internal.zzeg,java.lang.String,com.google.android.gms.internal.zzka)"->"com.google.android.gms.internal.zzek$zza: void <init>(com.google.android.gms.internal.zzek)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzdz: void <init>(com.google.android.gms.ads.AdListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzep)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.ads.Correlator: com.google.android.gms.internal.zzem zzbq()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzT(java.lang.String)" [label="zzfg(zzT)",];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzfg: void zzT(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzli,java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzdy: void <init>(com.google.android.gms.internal.zzdx)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zzS(java.lang.String)"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzgp)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zza(com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzef: com.google.android.gms.internal.zzec zza(android.content.Context,com.google.android.gms.internal.zzfe)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zza(com.google.android.gms.internal.zzfe)"->"com.google.android.gms.internal.zzet: boolean zzb(com.google.android.gms.internal.zzec)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.InterstitialAd: void loadAd(com.google.android.gms.ads.AdRequest)"->"com.google.android.gms.ads.AdRequest: com.google.android.gms.internal.zzfe zzbp()" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: com.google.android.gms.ads.InterstitialAd access$200(com.jpstudiosonline.tipcalculator.MainActivity)" [label="MainActivity(access$200)",];
    "com.jpstudiosonline.tipcalculator.MainActivity$3: void onClick(android.view.View)"->"com.jpstudiosonline.tipcalculator.MainActivity: com.google.android.gms.ads.InterstitialAd access$200(com.jpstudiosonline.tipcalculator.MainActivity)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$3: void onClick(android.view.View)"->"com.jpstudiosonline.tipcalculator.MainActivity: com.google.android.gms.ads.InterstitialAd access$200(com.jpstudiosonline.tipcalculator.MainActivity)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.InterstitialAd: void setAdListener(com.google.android.gms.ads.AdListener)" [label="InterstitialAd(setAdListener)",];
    "com.jpstudiosonline.tipcalculator.MainActivity$3: void onClick(android.view.View)"->"com.google.android.gms.ads.InterstitialAd: void setAdListener(com.google.android.gms.ads.AdListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zza(com.google.android.gms.internal.zzdx)" [label="zzfg(zza)",];
    "com.google.android.gms.ads.InterstitialAd: void setAdListener(com.google.android.gms.ads.AdListener)"->"com.google.android.gms.internal.zzfg: void zza(com.google.android.gms.internal.zzdx)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zza(com.google.android.gms.internal.zzdx)"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzeo)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zza(com.google.android.gms.internal.zzdx)"->"com.google.android.gms.internal.zzdy: void <init>(com.google.android.gms.internal.zzdx)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void zza(com.google.android.gms.internal.zzdx)"->"com.google.android.gms.internal.zzqf: void zzc(java.lang.String,java.lang.Throwable)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.InterstitialAd: void setAdListener(com.google.android.gms.ads.AdListener)"->"com.google.android.gms.internal.zzfg: void zza(com.google.android.gms.internal.zzdx)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void setAdListener(com.google.android.gms.ads.AdListener)" [label="zzfg(setAdListener)",];
    "com.google.android.gms.ads.InterstitialAd: void setAdListener(com.google.android.gms.ads.AdListener)"->"com.google.android.gms.internal.zzfg: void setAdListener(com.google.android.gms.ads.AdListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void setAdListener(com.google.android.gms.ads.AdListener)"->"com.google.android.gms.internal.zzdz: void <init>(com.google.android.gms.ads.AdListener)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void setAdListener(com.google.android.gms.ads.AdListener)"->"com.google.android.gms.internal.zzet: void zza(com.google.android.gms.internal.zzep)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void setAdListener(com.google.android.gms.ads.AdListener)"->"com.google.android.gms.internal.zzqf: void zzc(java.lang.String,java.lang.Throwable)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$3: void onClick(android.view.View)"->"com.jpstudiosonline.tipcalculator.MainActivity: com.google.android.gms.ads.InterstitialAd access$200(com.jpstudiosonline.tipcalculator.MainActivity)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.InterstitialAd: void show()" [label="InterstitialAd(show)",];
    "com.jpstudiosonline.tipcalculator.MainActivity$3: void onClick(android.view.View)"->"com.google.android.gms.ads.InterstitialAd: void show()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void show()" [label="zzfg(show)",];
    "com.google.android.gms.ads.InterstitialAd: void show()"->"com.google.android.gms.internal.zzfg: void show()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void show()"->"com.google.android.gms.internal.zzfg: void zzT(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void show()"->"com.google.android.gms.internal.zzqf: void zzc(java.lang.String,java.lang.Throwable)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzet: void showInterstitial()" [label="zzet(showInterstitial)",];
    "com.google.android.gms.internal.zzfg: void show()"->"com.google.android.gms.internal.zzet: void showInterstitial()" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$3: void onClick(android.view.View)"->"com.jpstudiosonline.tipcalculator.MainActivity: com.google.android.gms.ads.InterstitialAd access$200(com.jpstudiosonline.tipcalculator.MainActivity)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.InterstitialAd: boolean isLoaded()" [label="InterstitialAd(isLoaded)",];
    "com.jpstudiosonline.tipcalculator.MainActivity$3: void onClick(android.view.View)"->"com.google.android.gms.ads.InterstitialAd: boolean isLoaded()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: boolean isLoaded()" [label="zzfg(isLoaded)",];
    "com.google.android.gms.ads.InterstitialAd: boolean isLoaded()"->"com.google.android.gms.internal.zzfg: boolean isLoaded()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzet: boolean isReady()" [label="zzet(isReady)",];
    "com.google.android.gms.internal.zzfg: boolean isLoaded()"->"com.google.android.gms.internal.zzet: boolean isReady()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: boolean isLoaded()"->"com.google.android.gms.internal.zzqf: void zzc(java.lang.String,java.lang.Throwable)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$3$1: void <init>(com.jpstudiosonline.tipcalculator.MainActivity$3)" [label="MainActivity$3$1(<init>)",];
    "com.jpstudiosonline.tipcalculator.MainActivity$3: void onClick(android.view.View)"->"com.jpstudiosonline.tipcalculator.MainActivity$3$1: void <init>(com.jpstudiosonline.tipcalculator.MainActivity$3)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$3$1: void <init>(com.jpstudiosonline.tipcalculator.MainActivity$3)"->"com.google.android.gms.ads.AdListener: void <init>()" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$3: void onClick(android.view.View)"->"com.jpstudiosonline.tipcalculator.MainActivity: void calculateTip()" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.google.android.gms.ads.InterstitialAd: void setAdListener(com.google.android.gms.ads.AdListener)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.google.android.gms.ads.AdView: void setAdListener(com.google.android.gms.ads.AdListener)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity$5: void onClick(android.view.View)" [label="MainActivity$5(onClick)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.jpstudiosonline.tipcalculator.MainActivity$5: void onClick(android.view.View)" [label="GUI (2131165217)",style=bold,color=firebrick,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void resetBillInfo()" [label="MainActivity(resetBillInfo)",];
    "com.jpstudiosonline.tipcalculator.MainActivity$5: void onClick(android.view.View)"->"com.jpstudiosonline.tipcalculator.MainActivity: void resetBillInfo()" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void resetBillInfo()"->"com.jpstudiosonline.tipcalculator.MainActivity: void calculateTip()" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.ads.InterstitialAd: void setAdUnitId(java.lang.String)" [label="InterstitialAd(setAdUnitId)",];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.google.android.gms.ads.InterstitialAd: void setAdUnitId(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "com.google.android.gms.internal.zzfg: void setAdUnitId(java.lang.String)" [label="zzfg(setAdUnitId)",];
    "com.google.android.gms.ads.InterstitialAd: void setAdUnitId(java.lang.String)"->"com.google.android.gms.internal.zzfg: void setAdUnitId(java.lang.String)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"com.google.android.gms.ads.AdView: void loadAd(com.google.android.gms.ads.AdRequest)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: void onCreate(android.os.Bundle)"->"android.support.v7.app.AppCompatActivity: android.view.View findViewById(int)" [label="SIMPLE",style=bold,color=black,];
    "com.jpstudiosonline.tipcalculator.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)" [label="MainActivity(onOptionsItemSelected)",];
    "Root"->"com.jpstudiosonline.tipcalculator.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)" [label="SYMBOLIC",style=bold,color=black,];
    "something.MainActivity: Self Loop()"
    "com.jpstudiosonline.tipcalculator.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)"->"something.MainActivity: Self Loop()" [label="GUI (2131165284)",style=bold,color=firebrick,];
    "com.jpstudiosonline.tipcalculator.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)"->"something.MainActivity: Self Loop()" [label="GUI (2131165283)",style=bold,color=firebrick,];
    "com.jpstudiosonline.tipcalculator.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)"->"something.MainActivity: Self Loop()" [label="GUI (2131165214)",style=bold,color=firebrick,];
    "com.jpstudiosonline.tipcalculator.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)"->"something.MainActivity: Self Loop()" [label="GUI (2131165265)",style=bold,color=firebrick,];
    "com.jpstudiosonline.tipcalculator.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)"->"something.MainActivity: Self Loop()" [label="GUI (2131165223)",style=bold,color=firebrick,];
}
