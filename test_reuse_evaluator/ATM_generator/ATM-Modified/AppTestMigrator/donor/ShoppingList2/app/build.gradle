plugins {
    id "org.sonarqube" version "2.5"
}

apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'com.bmuschko.clover'

android {
    compileSdkVersion 21
    buildToolsVersion "25.0.3"

    defaultConfig {
        applicationId "br.com.activity"
        minSdkVersion 22
        targetSdkVersion 22
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            testCoverageEnabled true
        }
    }
}

jacoco { toolVersion = "0.7.5+" }

task jacocoTestReport(type: JacocoReport) {
    def coverageSourceDirs = [
            '../app/src/main/java'
    ]
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true
        html.enabled = true
    }
    classDirectories = fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: ['**/R*.class',
                       '**/*$InjectAdapter.class',
                       '**/*$ModuleAdapter.class',
                       '**/*$ViewInjector*.class'
            ])
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("$buildDir/outputs/code-coverage/connected/coverage.exec")
    doFirst {
        new File("$buildDir/intermediates/classes/").eachFileRecurse { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "ShoppingList2"
        property "sonar.projectKey", "SQKey"
        property "sonar.sources","src/main/java"
        property "sonar.language","java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.java.binaries", "${project.buildDir}/intermediates/classes/debug"
        property "sonar.tests", "src/androidTest/"
        //property "sonar.jacoco.reportPath", fileTree(dir: project.projectDir, includes: ['**/*.exec'])
        property "sonar.java.test.binaries", "${project.buildDir}/intermediates/classes/debug"
        property "sonar.jacoco.reportPaths", fileTree(dir: project.projectDir, includes: ['**/*.ec'])
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:21.0.0'
    clover 'org.openclover:clover:4.2.0'
    //compile 'com.google.android.gms:play-services:+'
    //compile files('libs/pollfish.jar')
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}
